{"version":3,"sources":["components/Header.js","components/TagSelect.js","myMovies.js","components/NoMovies.js","components/PageHeading.js","pages/Search.js","components/MovieForm.js","utils.js","pages/AddMovie.js","pages/EditMovie.js","components/SortOptions.js","components/TableList.js","pages/Collection.js","pages/Wishlist.js","pages/Account.js","components/IMDBOptions.js","components/IMDBResult.js","pages/IMDB.js","pages/SearchResult.js","App.js","registerServiceWorker.js","index.js"],"names":["withRouter","props","getClassName","url","location","pathname","getLink","className","Link","to","getText","id","data-target","TagSelect","state","selected","options","tags","this","getAllTags","i","tag","skip","includes","push","value","label","e","setState","getTagsFromSelect","type","creatable","getOptions","isSearchable","isMulti","onChange","handleChange","Component","date","fillMyMovies","collection","added","title","watched","year","series","review","wishlist","releaseDate","NoMovies","style","marginRight","class","onClick","obj","updateLocalStorage","window","reload","PageHeading","heading","searchOptions","reviewFilter","yearFilter","changeSearchOptions","onUnwatchedOnlyChange","unwatchedOnly","onWatchedOnlyChange","watchedOnly","getStarClass","starClass","length","getReviewMinMax","onReviewFilterChange","parseInt","target","onYearFilterChange","movies","excludeTags","includeTags","checked","starArr","key","renderReviewFilter","min","max","includeUnreviewed","getYearRange","includeNoYear","history","MovieForm","info","err","bind","num","preventDefault","formErrors","movieAction","actionVar","movieInfo","filter","movie","onSubmit","submit","onInputChange","yearErr","onWatchedChange","addedErr","onReviewChange","release","formErr","formatTodaysDate","now","Date","day","getDate","String","month","getMonth","getFullYear","AddMovie","addMovie","today","match","params","EditMovie","editMovie","tagsErr","errors","titleErr","split","val","sort","deleteMovie","moveToCollection","SortOptions","changeSortMethod","sortBy","getSortOption","TableList","rows","document","querySelectorAll","classList","substr","indexOf","add","method","a","b","titleA","toLowerCase","titleB","dateA","dateB","sortOption","ascending","sortedMovies","sortByMethod","reverse","deletable","removeFromList","editable","renderTags","textAlign","getStars","starsArr","renderTagArr","tagClass","changeSortOption","icon","iconClass","renderMovies","Collection","deleteAll","Wishlist","Account","exportData","importData","JSON","parse","alert","stringify","margin","getElementById","select","execCommand","onExportDataChange","onImportDataChange","fillDevMovies","IMDBOptions","data","map","chooseMovie","Title","Poster","src","alt","Year","displayOptions","chosenData","changeDisplay","IMDB","search","display","getData","axios","get","then","res","Search","catch","console","log","onSearchChange","SearchResult","matches","matchesIncludeTags","matchesExcludeTags","matchesUnwatchedOnly","matchesReviewFilter","matchesYearFilter","some","getMatches","App","updateState","coll_1","coll_2","coll_3","coll_4","coll","localStorage","setItem","_","union","getItem","updateYearRange","current","oldTitle","newMovies","tagList","j","minYear","maxYear","BrowserRouter","context","marginTop","Switch","Route","exact","path","render","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","URL","process","origin","addEventListener","fetch","response","status","headers","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1cfb9fa8.chunk.js","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n    function getClassName(url) {\n        const path = props.location.pathname;\n        if (path === url) {\n            return \"active\";\n        } else {\n            return \"\";\n        }\n    }\n\n    function getText(url) {\n        switch (url) {\n            case \"/collection\":\n                return \"My Collection\";\n            case \"/wishlist\":\n                return \"Wishlist\";\n            case \"/imdb\":\n                return \"IMDB\";\n            case \"/account\":\n                return \"Account\";\n            default:\n                return \"Pick a Movie\";\n        }\n    }\n\n    function getLink(url) {\n        return (\n            <li className={getClassName(url)}>\n                <Link to={url}>{getText(url)}</Link>\n            </li>\n        );\n    }\n\n    return (\n        <div id=\"header\">\n            <nav className=\"nav blue lighten-2\">\n                <div className=\"nav-wrapper\">\n                    <a className=\"brand-logo right\">moviecola</a>\n                    <ul className=\"left hide-on-med-and-down\">\n                        {getLink(\"/\")}\n                        {getLink(\"/collection\")}\n                        {getLink(\"/wishlist\")}\n                        {getLink(\"/imdb\")}\n                        {getLink(\"/account\")}\n                    </ul>\n                    <a\n                        data-target=\"mobile-demo\"\n                        className=\"sidenav-trigger hide-on-large\"\n                    >\n                        <i className=\"material-icons\">menu</i>\n                    </a>\n                </div>\n            </nav>\n\n            <ul className=\"sidenav hide-on-large\" id=\"mobile-demo\">\n                {getLink(\"/\")}\n                {getLink(\"/collection\")}\n                {getLink(\"/wishlist\")}\n                {getLink(\"/imdb\")}\n                {getLink(\"/account\")}\n            </ul>\n        </div>\n    );\n};\n\nexport default withRouter(Header);\n","import React, { Component } from \"react\";\nimport Select from \"react-select\";\nimport Creatable from \"react-select/lib/Creatable\";\n\nclass TagSelect extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { selected: [] };\n    }\n\n    getOptions() {\n        let options = [];\n        const tags = this.props.getAllTags();\n\n        for (let i in tags) {\n            const tag = tags[i];\n            if (!this.props.skip || !this.props.skip.includes(tag)) {\n                options.push({ value: tag, label: tag });\n            }\n        }\n\n        return options;\n    }\n\n    handleChange(e) {\n        this.setState({ selected: e });\n\n        let tags = [];\n        for (let i in e) {\n            tags.push(e[i].value);\n        }\n        this.props.getTagsFromSelect(tags, this.props.type);\n    }\n\n    componentWillMount() {\n        // Start out with tags selected if need be\n        if (this.props.tags) {\n            let selected = [];\n            const tags = this.props.tags;\n            for (let i in tags) {\n                selected.push({\n                    value: tags[i],\n                    label: tags[i]\n                });\n            }\n            this.setState({ selected });\n        }\n    }\n\n    render() {\n        if (this.props.creatable) {\n            return (\n                <Creatable\n                    options={this.getOptions()}\n                    isSearchable={true}\n                    isMulti={true}\n                    value={this.state.selected}\n                    onChange={e => this.handleChange(e)}\n                />\n            );\n        } else {\n            return (\n                <Select\n                    options={this.getOptions()}\n                    isSearchable={true}\n                    isMulti={true}\n                    value={this.state.selected}\n                    onChange={e => this.handleChange(e)}\n                />\n            );\n        }\n    }\n}\n\nexport default TagSelect;\n","const date = \"10/09/18\";\n\nexport function fillMyMovies() {\n    const collection = [\n        {\n            added: date,\n            tags: [\"crime\", \"drama\"],\n            title: \"American Hustle\",\n            watched: false,\n            year: \"2013\",\n            series: \"\"\n        },\n        {\n            added: date,\n            tags: [\"war\", \"action\"],\n            title: \"American Sniper\",\n            watched: false,\n            year: \"2014\",\n            series: \"\"\n        },\n        {\n            added: date,\n            tags: [\"musical\", \"animated\"],\n            title: \"Anastasia\",\n            watched: true,\n            year: \"?\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"action\", \"feminism\"],\n            title: \"Atomic Blonde\",\n            watched: false,\n            year: \"2017\",\n            series: \"\"\n        },\n        {\n            added: date,\n            tags: [\"action\", \"crime\", \"drama\"],\n            title: \"Baby Driver\",\n            watched: false,\n            year: \"2017\",\n            series: \"\"\n        },\n        {\n            added: date,\n            tags: [\"comedy\"],\n            title: \"Baywatch\",\n            watched: false,\n            year: \"?\",\n            series: \"\"\n        },\n        {\n            added: date,\n            tags: [\"disney\", \"musical\"],\n            title: \"Beauty and the Beast (2017)\",\n            watched: true,\n            year: \"2017\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"disney\", \"animated\", \"musical\"],\n            title: \"Beauty and the Beast\",\n            watched: true,\n            year: \"\",\n            series: \"\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"disney\", \"animated\", \"superhero\", \"cute\"],\n            title: \"Big Hero 6\",\n            watched: true,\n            year: \"2014\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Black Panther\",\n            watched: true,\n            year: \"2018\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"disney\", \"animated\", \"feminism\", \"adventure\", \"action\"],\n            title: \"Brave\",\n            watched: true,\n            year: \"2012\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Captain America\",\n            watched: true,\n            year: \"?\",\n            series: \"Captain America\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Captain America: Winter Soldier\",\n            watched: true,\n            year: \"2014\",\n            series: \"Captain America\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"disney\", \"animated\", \"musical\", \"family\", \"cute\"],\n            title: \"Coco\",\n            watched: true,\n            year: \"2017\",\n            series: \"\",\n            review: 5\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\", \"comedy\"],\n            title: \"Deadpool\",\n            watched: true,\n            year: \"2016\",\n            series: \"Deadpool\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\", \"comedy\"],\n            title: \"Deadpool 2\",\n            watched: true,\n            year: \"2018\",\n            series: \"Deadpool\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"animated\", \"comedy\", \"cute\"],\n            title: \"Despicable Me\",\n            watched: true,\n            year: \"?\",\n            series: \"Despicable Me\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"animated\", \"comedy\", \"cute\"],\n            title: \"Despicable Me 2\",\n            watched: true,\n            year: \"2013\",\n            series: \"Despicable Me\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"animated\", \"comedy\", \"cute\"],\n            title: \"Despicable Me 3\",\n            watched: true,\n            year: \"?\",\n            series: \"Despicable Me\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"dystopia\", \"angsty\"],\n            title: \"Divergent\",\n            watched: true,\n            year: \"?\",\n            series: \"Divergent\",\n            review: 2\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Doctor Strange\",\n            watched: true,\n            year: \"2016\",\n            series: \"\"\n        },\n        {\n            added: date,\n            tags: [\"comedy\", \"musical\"],\n            title: \"Dr. Horrible's Sing-Along Blog\",\n            watched: true,\n            year: \"?\",\n            series: \"\",\n            review: 5\n        },\n        {\n            added: date,\n            tags: [\"war\", \"action\"],\n            title: \"Dunkirk\",\n            watched: false,\n            year: \"2017\",\n            series: \"\"\n        },\n        {\n            added: date,\n            tags: [\"magic\", \"nerdy\"],\n            title: \"Fantastic Beasts\",\n            watched: true,\n            year: \"2016\",\n            series: \"Fantastic Beasts\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"animated\", \"animals\", \"cute\"],\n            title: \"Finding Dory\",\n            watched: true,\n            year: \"2016\",\n            series: \"Finding Nemo\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\n                \"disney\",\n                \"animated\",\n                \"musical\",\n                \"feminism\",\n                \"magic\",\n                \"family\"\n            ],\n            title: \"Frozen\",\n            watched: true,\n            year: \"2013\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Guardians of the Galaxy\",\n            watched: true,\n            year: \"2014\",\n            series: \"Guardians of the Galaxy\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Guardians of the Galaxy: Vol. 2\",\n            watched: true,\n            year: \"2017\",\n            series: \"Guardians of the Galaxy\",\n            review: 2\n        },\n        {\n            added: date,\n            tags: [\"feminism\", \"comedy\", \"spoopy\", \"action\"],\n            title: \"Ghostbusters (2016)\",\n            watched: true,\n            year: \"2016\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"comedy\", \"musical\"],\n            title: \"Hairspray\",\n            watched: true,\n            year: \"?\",\n            series: \"\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"nerdy\", \"nostalgia\", \"magic\"],\n            title: \"Harry Potter\",\n            watched: true,\n            year: \"?\",\n            series: \"Harry Potter\",\n            review: 5\n        },\n        {\n            added: date,\n            tags: [\"history\", \"feminism\", \"drama\"],\n            title: \"Hidden Figures\",\n            watched: true,\n            year: \"?\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"cute\", \"animated\", \"animals\"],\n            title: \"How to Train Your Dragon\",\n            watched: true,\n            year: \"?\",\n            series: \"How to Train Your Dragon\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"cute\", \"animated\", \"animals\"],\n            title: \"How to Train Your Dragon 2\",\n            watched: true,\n            year: \"2014\",\n            series: \"How to Train Your Dragon\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"comedy\", \"drama\"],\n            title: \"I, Tonya\",\n            watched: true,\n            year: \"2017\",\n            series: \"\",\n            review: 5\n        },\n        {\n            added: date,\n            tags: [\"animated\", \"animals\"],\n            title: \"Ice Age\",\n            watched: true,\n            year: \"?\",\n            series: \"Ice Age\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"disney\", \"animated\", \"cute\"],\n            title: \"Inside Out\",\n            watched: true,\n            year: \"2015\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"action\", \"dystopia\", \"angsty\"],\n            title: \"Insurgent\",\n            watched: true,\n            year: \"2014\",\n            series: \"Divergent\",\n            review: 2\n        },\n        {\n            added: date,\n            tags: [\"action\", \"adventure\", \"scifi\"],\n            title: \"Interstellar\",\n            watched: true,\n            year: \"2014\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"disney\", \"musical\"],\n            title: \"Into the Woods\",\n            watched: true,\n            year: \"2014\",\n            series: \"\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Iron Man\",\n            watched: true,\n            year: \"?\",\n            series: \"Iron Man\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Iron Man 2\",\n            watched: true,\n            year: \"?\",\n            series: \"Iron Man\",\n            review: 2\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Iron Man 3\",\n            watched: true,\n            year: \"2013\",\n            series: \"Iron Man\",\n            review: 2\n        },\n        {\n            added: date,\n            tags: [\"animals\", \"animated\", \"comedy\"],\n            title: \"Isle of Dogs\",\n            watched: true,\n            year: \"2018\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"action\"],\n            title: \"Jurassic World\",\n            watched: true,\n            year: \"2015\",\n            series: \"Jurassic World\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\"],\n            title: \"Jurassic World: #2\",\n            watched: true,\n            year: \"2018\",\n            series: \"Jurassic World\",\n            review: 2\n        },\n        {\n            added: date,\n            tags: [\"animated\"],\n            title: \"Kubo and the Two Strings\",\n            watched: false,\n            year: \"2016\",\n            series: \"\"\n        },\n        {\n            added: date,\n            tags: [\"musical\", \"romance\"],\n            title: \"La La Land\",\n            watched: false,\n            year: \"2017 or 2016?\",\n            series: \"\"\n        },\n        {\n            added: date,\n            tags: [\"musical\", \"history\", \"drama\"],\n            title: \"Les Miserables\",\n            watched: true,\n            year: \"2012\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"nerdy\", \"magic\", \"adventure\"],\n            title: \"Lord of the Rings: #1\",\n            watched: true,\n            year: \"?\",\n            series: \"Lord of the Rings\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"nerdy\", \"magic\", \"adventure\"],\n            title: \"Lord of the Rings: #2\",\n            watched: true,\n            year: \"?\",\n            series: \"Lord of the Rings\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"nerdy\", \"magic\", \"adventure\"],\n            title: \"Lord of the Rings: #3\",\n            watched: true,\n            year: \"?\",\n            series: \"Lord of the Rings\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"disney\", \"animated\", \"musical\"],\n            title: \"Moana\",\n            watched: true,\n            year: \"?\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"musical\", \"comedy\"],\n            title: \"Pitch Perfect\",\n            watched: true,\n            year: \"2012\",\n            series: \"Pitch Perfect\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"musical\", \"comedy\"],\n            title: \"Pitch Perfect 2\",\n            watched: true,\n            year: \"2015\",\n            series: \"Pitch Perfect\",\n            review: 2\n        },\n        {\n            added: date,\n            tags: [\"musical\", \"comedy\"],\n            title: \"Pitch Perfect 3\",\n            watched: true,\n            year: \"?\",\n            series: \"Pitch Perfect\",\n            review: 2\n        },\n        {\n            added: date,\n            tags: [\"nerdy\", \"action\", \"adventure\", \"scifi\"],\n            title: \"Rogue One: A Star Wars Story\",\n            watched: true,\n            year: \"2016\",\n            series: \"Star Wars\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"superhero\", \"action\"],\n            title: \"Suicide Squad\",\n            watched: true,\n            year: \"2016\",\n            series: \"\",\n            review: 1\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"The Avengers\",\n            watched: true,\n            year: \"2012\",\n            series: \"Avengers\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"The Avengers: Age of Ultron\",\n            watched: true,\n            year: \"2015\",\n            series: \"Avengers\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"musical\", \"animated\", \"animals\", \"cute\"],\n            title: \"Sing!\",\n            watched: true,\n            year: \"?\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"marvel\", \"superhero\", \"action\"],\n            title: \"Spiderman: Homecoming\",\n            watched: true,\n            year: \"2017\",\n            series: \"Spiderman\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"nerdy\", \"scifi\", \"action\", \"adventure\"],\n            title: \"Star Wars\",\n            watched: true,\n            year: \"?\",\n            series: \"Star Wars\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"The Avengers: Infinity War\",\n            watched: true,\n            year: \"?\",\n            series: \"Avengers\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"comedy\", \"romance\", \"drama\"],\n            title: \"The Big Sick\",\n            watched: false,\n            year: \"2017\",\n            series: \"\"\n        },\n        {\n            added: date,\n            tags: [\"comedy\"],\n            title: \"The Hangover\",\n            watched: true,\n            year: \"?\",\n            series: \"The Hangover\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"history\", \"drama\"],\n            title: \"The Help\",\n            watched: true,\n            year: \"?\",\n            series: \"\",\n            review: 2\n        },\n        {\n            added: date,\n            tags: [\"action\", \"adventure\", \"nerdy\"],\n            title: \"The Hobbit\",\n            watched: true,\n            year: \"?\",\n            series: \"The Hobbit\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"adventure\", \"nerdy\"],\n            title: \"The Hobbit: The Desolation of Smaug\",\n            watched: true,\n            year: \"2013\",\n            series: \"The Hobbit\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"adventure\", \"nerdy\"],\n            title: \"The Hobbit: The Battle of the Five Armies\",\n            watched: true,\n            year: \"2014\",\n            series: \"The Hobbit\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"angsty\", \"dystopia\"],\n            title: \"The Hunger Games\",\n            watched: true,\n            year: \"2012\",\n            series: \"Hunger Games\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"action\", \"angsty\", \"dystopia\"],\n            title: \"The Hunger Games: Catching Fire\",\n            watched: true,\n            year: \"2013\",\n            series: \"Hunger Games\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"angsty\", \"dystopia\"],\n            title: \"The Hunger Games: Mockingjay Part 1\",\n            watched: true,\n            year: \"2014\",\n            series: \"Hunger Games\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"angsty\", \"dystopia\"],\n            title: \"The Hunger Games: Mockingjay Part 2\",\n            watched: true,\n            year: \"2015\",\n            series: \"Hunger Games\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"drama\", \"history\"],\n            title: \"The Imitation Game\",\n            watched: true,\n            year: \"2014\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"animated\", \"comedy\"],\n            title: \"The Lego Movie\",\n            watched: true,\n            year: \"2014\",\n            series: \"Lego Movie\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"animated\", \"comedy\"],\n            title: \"The Lego Batman Movie\",\n            watched: true,\n            year: \"?\",\n            series: \"Lego Movie\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"animated\", \"comedy\"],\n            title: \"The Lego Ninjago Movie\",\n            watched: true,\n            year: \"?\",\n            series: \"Lego Movie\"\n        },\n        {\n            added: date,\n            tags: [\"action\", \"dystopia\"],\n            title: \"The Maze Runner\",\n            watched: true,\n            year: \"2014\",\n            series: \"The Maze Runner\",\n            review: 2\n        },\n        {\n            added: date,\n            tags: [\"history\", \"drama\"],\n            title: \"The Zookeeper's Wife\",\n            watched: true,\n            year: \"2017\",\n            series: \"\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Thor\",\n            watched: true,\n            year: \"?\",\n            series: \"Thor\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Thor: The Dark World\",\n            watched: true,\n            year: \"2013\",\n            series: \"Thor\",\n            review: 2\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Thor: Ragnarok\",\n            watched: true,\n            year: \"2017\",\n            series: \"Thor\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"feminism\"],\n            title: \"Wonder Woman\",\n            watched: true,\n            year: \"2017\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"animated\", \"disney\", \"cute\"],\n            title: \"Wreck-It Ralph\",\n            watched: true,\n            year: \"2012\",\n            series: \"Wreck-It Ralph\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"disney\", \"animated\", \"animals\"],\n            title: \"Zootopia\",\n            watched: true,\n            year: \"2016\",\n            series: \"\",\n            review: 4\n        }\n    ];\n    const wishlist = [\n        {\n            added: \"10/08/18\",\n            tags: [\"spoopy\", \"disney\", \"animated\"],\n            title: \"The Nightmare Before Christmas\",\n            watched: false,\n            year: \"?\",\n            releaseDate: \"released\"\n        },\n        {\n            added: \"10/08/18\",\n            tags: [\"comedy\", \"#deep\"],\n            title: \"The Truman Show\",\n            watched: true,\n            year: \"?\",\n            releaseDate: \"released\"\n        },\n        {\n            added: \"10/01/18\",\n            tags: [\"romance\", \"comedy\"],\n            title: \"Crazy Rich Asians\",\n            watched: false,\n            year: \"2018\",\n            releaseDate: \"?\"\n        },\n        {\n            added: \"10/07/18\",\n            tags: [\"disney\", \"animated\", \"superhero\"],\n            title: \"Incredibles 2\",\n            watched: true,\n            year: \"2018\",\n            releaseDate: \"October 23\"\n        },\n        {\n            added: \"10/01/18\",\n            tags: [\"comedy\", \"history\"],\n            title: \"KKKlansman\",\n            watched: false,\n            year: \"2018\",\n            releaseDate: \"?\"\n        },\n        {\n            added: \"10/01/18\",\n            tags: [\"disney\", \"musical\", \"nostalgia\"],\n            title: \"Mary Poppins Returns\",\n            watched: false,\n            year: \"2018\",\n            releaseDate: \"theaters soon?\"\n        },\n        {\n            added: \"10/01/18\",\n            tags: [\"disney\", \"animated\"],\n            title: \"Wreck-It Ralph 2\",\n            watched: false,\n            year: \"2018\",\n            releaseDate: \"theaters soon?\"\n        },\n        {\n            added: \"10/01/18\",\n            tags: [\"nerdy\", \"magic\"],\n            title: \"Fantastic Beasts: The Crimes of Grindelwald\",\n            watched: false,\n            year: \"2018\",\n            releaseDate: \"theaters in Nov\"\n        },\n        {\n            added: \"10/09/18\",\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Ant-Man\",\n            watched: true,\n            year: \"2015\",\n            series: \"Ant-Man\",\n            releaseDate: \"released\"\n        },\n        {\n            added: \"10/09/18\",\n            tags: [\"superhero\", \"action\", \"marvel\"],\n            title: \"Ant-Man and the Wasp\",\n            watched: false,\n            year: \"2018\",\n            series: \"Ant-Man\",\n            releaseDate: \"?\"\n        },\n        {\n            added: date,\n            tags: [\"horror\", \"romance\"],\n            title: \"Warm Bodies\",\n            watched: true,\n            year: \"2013\",\n            series: \"\",\n            releaseDate: \"released\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"animated\", \"disney\", \"cute\"],\n            title: \"Wreck-It Ralph 2\",\n            watched: true,\n            year: \"2012\",\n            releaseDate: \"?\",\n            series: \"Wreck-It Ralph\"\n        }\n    ];\n\n    return { collection, wishlist };\n}\n\n// {\n//     added: date,\n//     tags: [],\n//     title: \"\",\n//     watched: true,\n//     year: \"?\",\n//     series: \"\"\n// }\n\n// {\n//     added: \"\",\n//     tags: [],\n//     title: \"\",\n//     watched: false,\n//     year: \"\",\n//     releaseDate: \"\",\n//     series: \"\"\n//   }\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { fillMyMovies } from \"../myMovies\";\r\n\r\nconst NoMovies = (props) => {\r\n    function fillDevMovies(obj) {\r\n        props.updateLocalStorage(obj.collection, obj.wishlist);\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p>You have no movies in your collection.</p>\r\n            <Link to=\"/add/collection\" style={{ marginRight: \"10px\" }}>\r\n                <a class=\"waves-effect waves-light btn blue lighten-2\">\r\n                    Add a Movie\r\n                </a>\r\n            </Link>\r\n            <a\r\n                class=\"waves-effect waves-light btn blue lighten-2\"\r\n                onClick={() => fillDevMovies(fillMyMovies())}\r\n            >\r\n                Use Demo Movies\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NoMovies;\r\n","import React from \"react\";\r\n\r\nconst PageHeading = (props) => {\r\n    return (\r\n        <div className=\"page-heading\">\r\n            <h2>{props.heading}</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageHeading;\r\n","import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport TagSelect from \"../components/TagSelect\";\nimport NoMovies from \"../components/NoMovies\";\nimport PageHeading from \"../components/PageHeading\";\n\n// TODO: error check include & exclude same tag\nconst Search = (props) => {\n    const { searchOptions } = props;\n    const { reviewFilter, yearFilter } = searchOptions;\n\n    function getTagsFromSelect(tags, type) {\n        if (type === \"search_option_include\") {\n            props.changeSearchOptions(\"includeTags\", tags);\n        } else {\n            props.changeSearchOptions(\"excludeTags\", tags);\n        }\n    }\n\n    function onUnwatchedOnlyChange() {\n        // If becoming true, make sure watchedOnly is false\n        if (!props.searchOptions.unwatchedOnly) {\n            props.changeSearchOptions(\"watchedOnly\", false);\n        }\n        // Toggle unwatchedOnly option\n        props.changeSearchOptions(\n            \"unwatchedOnly\",\n            !props.searchOptions.unwatchedOnly\n        );\n    }\n\n    function onWatchedOnlyChange() {\n        // If becoming true, make sure watchedOnly is false\n        if (!props.searchOptions.watchedOnly) {\n            props.changeSearchOptions(\"unwatchedOnly\", false);\n        }\n        // Toggle unwatchedOnly option\n        props.changeSearchOptions(\n            \"watchedOnly\",\n            !props.searchOptions.watchedOnly\n        );\n    }\n\n    function getStarClass(i) {\n        let starClass = \"material-icons small icon-link review-star no-hover\";\n        // If this number is in the reviewFilter,\n        // or between 2 reviewFilter numbers, add active class\n        if (reviewFilter.includes(i)) {\n            starClass += \" review-star-active\";\n        } else if (reviewFilter.length > 1) {\n            if (i >= reviewFilter[0] && i <= reviewFilter[1]) {\n                starClass += \" review-star-active\";\n            }\n        }\n        return starClass;\n    }\n\n    function getReviewMinMax(type) {\n        if (type === \"min\") {\n            // Get the minimum value for the max input.\n            // 1 if there's no set min,\n            // otherwise it will be the min + 1.\n            if (!reviewFilter[0]) {\n                return 1;\n            } else {\n                return reviewFilter[0] + 1;\n            }\n        } else {\n            // Get the maximum value for the min input.\n            // 5 if there's no set max,\n            // otherwise it will be the max - 1.\n            if (!reviewFilter[1]) {\n                return 5;\n            } else {\n                return reviewFilter[1] - 1;\n            }\n        }\n    }\n\n    function renderReviewFilter() {\n        let starArr = [];\n        for (let i = 1; i <= 5; i++) {\n            starArr.push(\n                <i className={getStarClass(i)} key={i}>\n                    star\n                </i>\n            );\n        }\n\n        return starArr;\n    }\n\n    function onReviewFilterChange(e, type) {\n        const review = parseInt(e.target.value, 10);\n\n        if (type === \"min\") {\n            props.changeSearchOptions(\"reviewFilter\", [\n                review,\n                reviewFilter[1]\n            ]);\n        } else {\n            props.changeSearchOptions(\"reviewFilter\", [\n                reviewFilter[0],\n                review\n            ]);\n        }\n    }\n\n    function onYearFilterChange(e, type) {\n        const year = parseInt(e.target.value, 10);\n\n        if (type === \"min\") {\n            props.changeSearchOptions(\"yearFilter\", [year, yearFilter[1]]);\n        } else {\n            props.changeSearchOptions(\"yearFilter\", [yearFilter[0], year]);\n        }\n    }\n\n    function submitSearch() {\n        // TODO: Error checks\n        // e.g. make sure min & max reviews are valid\n\n        // Reroute to SearchResult page\n        props.history.push(\"/search_result\");\n    }\n\n    return (\n        <div id=\"search\">\n            <PageHeading heading=\"Search\" />\n            {props.movies.length > 0 ? (\n                <div>\n                    <div className=\"row\">\n                        <div className=\"col s12 no-padding-left  no-padding-right\">\n                            <h6>Include tags:</h6>\n                            <TagSelect\n                                creatable={false}\n                                getAllTags={props.getAllTags}\n                                getTagsFromSelect={getTagsFromSelect}\n                                type=\"search_option_include\"\n                                skip={searchOptions.excludeTags}\n                                tags={searchOptions.includeTags}\n                            />\n                        </div>\n                    </div>\n                    {/* TODO: add use only */}\n                    <div className=\"row\">\n                        <div className=\"col s12  no-padding-left  no-padding-right\">\n                            <h6>Exclude tags:</h6>\n                            <TagSelect\n                                creatable={false}\n                                getAllTags={props.getAllTags}\n                                getTagsFromSelect={getTagsFromSelect}\n                                type=\"search_option_exclude\"\n                                skip={searchOptions.includeTags}\n                                tags={searchOptions.excludeTags}\n                            />\n                        </div>\n                    </div>\n                    <br />\n                    <div className=\"row\">\n                        <div className=\"col l4 s12\">\n                            <h3>watched/unwatched only</h3>\n                            <div\n                                className=\"col checkbox-wrapper\"\n                                onClick={() => onUnwatchedOnlyChange()}\n                            >\n                                <input\n                                    type=\"checkbox\"\n                                    checked={\n                                        props.searchOptions.unwatchedOnly\n                                            ? true\n                                            : false\n                                    }\n                                    onChange={() => onUnwatchedOnlyChange()}\n                                />\n                                <span>Unwatched only</span>\n                            </div>\n                            <div\n                                className=\"col checkbox-wrapper\"\n                                onClick={() => onWatchedOnlyChange()}\n                            >\n                                <input\n                                    type=\"checkbox\"\n                                    checked={\n                                        props.searchOptions.watchedOnly\n                                            ? true\n                                            : false\n                                    }\n                                    onChange={() => onWatchedOnlyChange()}\n                                />\n                                <span>Watched only</span>\n                            </div>\n                        </div>\n                        <div className=\"col l4 s12\">\n                            <h3>filter by your reviews</h3>\n                            {renderReviewFilter()}\n                            <br />\n                            Min:{\" \"}\n                            <input\n                                type=\"number\"\n                                className=\"review-search-input\"\n                                value={reviewFilter[0]}\n                                min=\"1\"\n                                max={getReviewMinMax(\"max\")}\n                                onChange={(e) => onReviewFilterChange(e, \"min\")}\n                            />\n                            Max:{\" \"}\n                            <input\n                                type=\"number\"\n                                className=\"review-search-input\"\n                                value={reviewFilter[1]}\n                                min={getReviewMinMax(\"min\")}\n                                max=\"5\"\n                                onChange={(e) => onReviewFilterChange(e, \"max\")}\n                            />\n                            <a\n                                onClick={() =>\n                                    props.changeSearchOptions(\"reviewFilter\", [\n                                        1,\n                                        5\n                                    ])\n                                }\n                                className=\"reset-filter\"\n                            >\n                                Reset\n                            </a>\n                            <br />\n                            <br />\n                            <div\n                                className=\"col checkbox-wrapper\"\n                                onClick={() =>\n                                    props.changeSearchOptions(\n                                        \"includeUnreviewed\",\n                                        !props.searchOptions.includeUnreviewed\n                                    )\n                                }\n                            >\n                                <input\n                                    type=\"checkbox\"\n                                    checked={\n                                        props.searchOptions.includeUnreviewed\n                                            ? true\n                                            : false\n                                    }\n                                    onChange={() =>\n                                        props.changeSearchOptions(\n                                            \"includeUnreviewed\",\n                                            !props.searchOptions\n                                                .includeUnreviewed\n                                        )\n                                    }\n                                />\n                                <span>Include unreviewed movies</span>\n                            </div>\n                        </div>\n                        <div className=\"col l4 s12\">\n                            <h3>filter by year</h3>\n                            Min:{\" \"}\n                            <input\n                                type=\"number\"\n                                className=\"review-search-input\"\n                                value={yearFilter[0]}\n                                min={props.getYearRange().min}\n                                max={props.getYearRange().max - 1}\n                                onChange={(e) => onYearFilterChange(e, \"min\")}\n                            />\n                            Max:{\" \"}\n                            <input\n                                type=\"number\"\n                                className=\"review-search-input\"\n                                value={yearFilter[1]}\n                                min={props.getYearRange().min + 1}\n                                max={props.getYearRange().max}\n                                onChange={(e) => onYearFilterChange(e, \"max\")}\n                            />\n                            <a\n                                onClick={() =>\n                                    props.changeSearchOptions(\"yearFilter\", [\n                                        props.getYearRange().min,\n                                        props.getYearRange().max\n                                    ])\n                                }\n                                className=\"reset-filter\"\n                            >\n                                Reset\n                            </a>\n                            <br />\n                            <br />\n                            <div\n                                className=\"col checkbox-wrapper\"\n                                onClick={() =>\n                                    props.changeSearchOptions(\n                                        \"includeNoYear\",\n                                        !props.searchOptions.includeNoYear\n                                    )\n                                }\n                            >\n                                <input\n                                    type=\"checkbox\"\n                                    checked={\n                                        props.searchOptions.includeNoYear\n                                            ? true\n                                            : false\n                                    }\n                                    onChange={() =>\n                                        props.changeSearchOptions(\n                                            \"includeNoYear\",\n                                            !props.searchOptions.includeNoYear\n                                        )\n                                    }\n                                />\n                                <span>Include movies with no year entered</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col s12\">\n                            <br />\n                            <button\n                                className=\"btn blue lighten-2\"\n                                onClick={() => submitSearch()}\n                            >\n                                Search\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <NoMovies updateLocalStorage={props.updateLocalStorage} />\n            )}\n        </div>\n    );\n};\n\nexport default withRouter(Search);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport TagSelect from \"./TagSelect\";\n\nclass MovieForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            info: {\n                title: \"\",\n                year: \"\",\n                watched: \"\",\n                added: \"\",\n                series: \"\",\n                releaseDate: \"\"\n            },\n            err: {\n                title: \"\",\n                year: \"\",\n                watched: \"\",\n                added: \"\",\n                series: \"\",\n                releaseDate: \"\"\n            }\n        };\n\n        this.getTagsFromSelect = this.getTagsFromSelect.bind(this);\n    }\n\n    onInputChange(e, label) {\n        let { info, err } = this.state;\n        info[label] = e.target.value;\n        err[label] = \"\";\n        this.setState({ info, err });\n    }\n\n    onWatchedChange() {\n        let info = this.state.info;\n        info.watched = !info.watched;\n        this.setState({ info });\n    }\n\n    getStarClass(num) {\n        let starClass = \"material-icons small icon-link review-star\";\n        if (this.state.review && this.state.review >= num) {\n            starClass += \" review-star-active\";\n        }\n        return starClass;\n    }\n\n    onReviewChange(num) {\n        if (num === this.state.review) {\n            this.setState({ review: false });\n        } else {\n            this.setState({ review: num });\n        }\n    }\n\n    getTagsFromSelect(tags) {\n        let info = this.state.info;\n        info.tags = tags;\n        this.setState({ info });\n    }\n\n    submit(e) {\n        // TODO: check for more form errors (movie already exists, year, releaseDate)\n        // (copied old error checking from AddMovie)\n        e.preventDefault();\n\n        let formErrors = false;\n\n        if (!this.state.info.title) {\n            formErrors = true;\n            let err = { title: \"Please add a title\" };\n            this.setState({ err });\n        }\n\n        // let errors = false;\n        // if (!this.state.title) {\n        //     this.setState({ titleErr: \"Please enter a title.\" });\n        //     errors = true;\n        // }\n        // if (this.state.title.includes(\"#\")) {\n        //     this.setState({ titleErr: \"Title cannot inclue a '#'\" });\n        //     errors = true;\n        // }\n        // if (this.state.year && this.state.year.length !== 4) {\n        //     this.setState({ yearErr: \"Please enter a valid year.\" });\n        //     errors = true;\n        // }\n        // // Some rough error checking on the date.\n        // // Make sure it's 10 digits, has a slash,\n        // // month is < 12 and day is < 31.\n        // if (\n        //     this.state.added.length !== 10 ||\n        //     !this.state.added.includes(\"/\") ||\n        //     this.state.added.split(\"/\")[0] > 12 ||\n        //     this.state.added.split(\"/\")[1] > 31\n        // ) {\n        //     this.setState({\n        //         addedErr: \"Please enter a date in the format mm/dd/yyyy\"\n        //     });\n        //     errors = true;\n        // }\n\n        if (!formErrors) {\n            this.props.movieAction(this.state.info, this.props.type);\n        }\n\n        this.props.history.push(`/${this.props.type}`);\n    }\n\n    componentWillMount() {\n        // If we're editing an existing movie,\n        // fill form with info\n        const { movies, type, title } = this.props;\n        if (this.props.actionVar === \"edit\") {\n            const movieInfo = movies[type].filter(movie => {\n                return movie.title === title;\n            })[0];\n            this.setState({ info: movieInfo });\n        }\n    }\n\n    render() {\n        const { type } = this.props;\n        const { info, err } = this.state;\n        return (\n            <form onSubmit={e => this.submit(e)}>\n                <div className=\"input-field col s12\">\n                    <p className=\"form-label\">Title</p>\n                    <input\n                        id=\"input-title\"\n                        type=\"text\"\n                        value={info.title}\n                        onChange={e => this.onInputChange(e, \"title\")}\n                    />\n                    <div className=\"form-err\">{err.title}</div>\n                </div>\n                <div className=\"input-field col s8\">\n                    <p className=\"form-label\">Year</p>\n                    <input\n                        id=\"input-year\"\n                        type=\"number\"\n                        value={info.year}\n                        onChange={e => this.onInputChange(e, \"year\")}\n                    />\n                    <div className=\"form-err\">{this.state.yearErr}</div>\n                </div>\n                <div className=\"input-field col s4\">\n                    <div\n                        className=\"col checkbox-wrapper\"\n                        onClick={() => this.onWatchedChange()}\n                    >\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.info.watched}\n                            onChange={() => this.onWatchedChange()}\n                        />\n                        <span>Watched?</span>\n                    </div>\n                </div>\n                <div className=\"input-field col s12\">\n                    <p className=\"form-label\">Tags</p>\n                    <TagSelect\n                        getAllTags={this.props.getAllTags}\n                        getTagsFromSelect={this.getTagsFromSelect}\n                        creatable={true}\n                        tags={this.state.info.tags}\n                    />\n                </div>\n                <div className=\"input-field col s12\">\n                    <p className=\"form-label\">\n                        Added to {type} (defaults to today, format MM/DD/YYYY)\n                    </p>\n                    <input\n                        id=\"input-added\"\n                        type=\"text\"\n                        value={info.added}\n                        onChange={e => this.onInputChange(e, \"added\")}\n                    />\n                    <div className=\"form-err\">{this.state.addedErr}</div>\n                </div>\n                <div className=\"input-field col s12\">\n                    <p className=\"form-label\">\n                        Series if applicable (e.g. Harry Potter and the\n                        Half-Blood Prince is part of \"Harry Potter\")\n                    </p>\n                    <input\n                        id=\"input-series\"\n                        type=\"text\"\n                        value={info.series}\n                        onChange={e => this.onInputChange(e, \"series\")}\n                    />\n                </div>\n                {type === \"collection\" ? (\n                    <div className=\"input-field col s12\">\n                        <p className=\"form-label\">Your review</p>\n                        <i\n                            className={this.getStarClass(1)}\n                            onClick={() => this.onReviewChange(1)}\n                        >\n                            star\n                        </i>\n                        <i\n                            className={this.getStarClass(2)}\n                            onClick={() => this.onReviewChange(2)}\n                        >\n                            star\n                        </i>\n                        <i\n                            className={this.getStarClass(3)}\n                            onClick={() => this.onReviewChange(3)}\n                        >\n                            star\n                        </i>\n                        <i\n                            className={this.getStarClass(4)}\n                            onClick={() => this.onReviewChange(4)}\n                        >\n                            star\n                        </i>\n                        <i\n                            className={this.getStarClass(5)}\n                            onClick={() => this.onReviewChange(5)}\n                        >\n                            star\n                        </i>\n                    </div>\n                ) : null}\n                {type === \"wishlist\" ? (\n                    <div className=\"input-field col s12\">\n                        <p className=\"form-label\">\n                            Release date if known, or can put \"released\" if\n                            already released\n                        </p>\n                        <input\n                            id=\"input-release\"\n                            type=\"text\"\n                            value={info.release}\n                            onChange={e => this.onInputChange(e, \"releaseDate\")}\n                        />\n                    </div>\n                ) : null}\n                <div className=\"input-field col s12\">\n                    <p className=\"form-err\">{this.state.formErr}</p>{\" \"}\n                    <button\n                        className=\"btn waves-effect waves-light blue lighten-2\"\n                        onClick={e => this.submit(e)}\n                    >\n                        {this.props.actionVar === \"add\" ? \"Add\" : \"Update\"}\n                        <i className=\"material-icons right\" />\n                    </button>\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default withRouter(MovieForm);\n","export const OMDB_API = \"http://www.omdbapi.com/?apikey=b502230&\";\n\nexport function formatTodaysDate() {\n  const now = new Date();\n  let day = now.getDate();\n  if (day < 10) {\n    day = \"0\" + String(day);\n  }\n  let month = now.getMonth() + 1;\n  if (month < 10) {\n    month = \"0\" + String(month);\n  }\n  const year = now.getFullYear();\n\n  return `${month}/${day}/${year}`;\n}\n\nexport function titleFromTags(arr) {\n  let title = \"\";\n  let titleArr = arr.split(\"&\");\n  if (titleArr.length === 1) {\n    title = titleArr[0];\n  } else if (titleArr.length === 2) {\n    title = titleArr[0] + \" & \" + titleArr[1];\n  } else {\n    for (let i in titleArr) {\n      if (i < titleArr.length - 1) {\n        title += titleArr[i] + \", \";\n      } else {\n        title += \" & \" + titleArr[i];\n      }\n    }\n  }\n  return title;\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nimport MovieForm from \"../components/MovieForm\";\nimport { formatTodaysDate } from \"../utils\";\n\nclass AddMovie extends Component {\n    constructor(props) {\n        super(props);\n\n        this.addMovie = this.addMovie.bind(this);\n    }\n\n    addMovie(info, type) {\n        if (!info.added) {\n            info.added = formatTodaysDate();\n        }\n        if (type === \"wishlist\" && !info.releaseDate) {\n            info.releaseDate = \"unknown\";\n        }\n        this.props.addMovie(info, type);\n        this.props.history.push(`/${type}`);\n    }\n\n    componentWillMount() {\n        const today = formatTodaysDate();\n        this.setState({ added: today });\n    }\n\n    render() {\n        const type = this.props.match.params.type;\n        return (\n            <div className=\"row\">\n                <div className=\"col s12\">\n                    <Link to={`/${type}`}>\n                        <i className=\"material-icons small icon-link\">\n                            arrow_back\n                        </i>\n                    </Link>\n                    <Link to={\"/imdb\"} className=\"right\">\n                        IMDB Search{\" \"}\n                        <i className=\"material-icons tiny icon-link\">search</i>\n                    </Link>\n                    <h5>\n                        Add to{\" \"}\n                        {type === \"collection\" ? \"Collection\" : \"Wishlist\"}\n                    </h5>\n                    <div className=\"row\">\n                        <MovieForm\n                            movieAction={this.addMovie}\n                            actionVar=\"add\"\n                            type={type}\n                            getAllTags={this.props.getAllTags}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(AddMovie);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nimport MovieForm from \"../components/MovieForm\";\nimport { formatTodaysDate } from \"../utils\";\n\nclass EditMovie extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { type: \"\", addedErr: \"\" };\n\n        this.editMovie = this.editMovie.bind(this);\n    }\n\n    onTitleChange(e) {\n        this.setState({ title: e.target.value });\n    }\n\n    onYearChange(e) {\n        this.setState({ year: e.target.value });\n    }\n\n    onWatchedChange(e) {\n        this.setState({ watched: e.target.checked });\n    }\n\n    onTagsChange(e) {\n        // TODO: better way to input than separating by spaces\n        this.setState({ tags: e.target.value, tagsErr: \"\" });\n    }\n\n    onAddedChange(e) {\n        this.setState({ added: e.target.value, addedErr: \"\" });\n    }\n\n    onReleaseDateChange(e) {\n        this.setState({ releaseDate: e.target.value });\n    }\n\n    onSeriesChange(e) {\n        this.setState({ series: e.target.value });\n    }\n\n    onReviewChange(num) {\n        if (num === this.state.review) {\n            this.setState({ review: false });\n        } else {\n            this.setState({ review: num });\n        }\n    }\n\n    getStarClass(num) {\n        let starClass = \"material-icons small icon-link review-star\";\n        if (this.state.review && this.state.review >= num) {\n            starClass += \" review-star-active\";\n        }\n        return starClass;\n    }\n\n    updateMovie(e) {\n        e.preventDefault();\n        let errors = false;\n        if (!this.state.title) {\n            this.setState({ titleErr: \"Please enter a title.\" });\n            errors = true;\n        }\n        if (this.state.title.includes(\"#\")) {\n            this.setState({ titleErr: \"Title cannot inclue a '#'\" });\n            errors = true;\n        }\n\n        // Some rough error checking on the date.\n        // Make sure it's 10 digits, has a slash,\n        // month is < 12 and day is < 31.\n        if (\n            this.state.added.length !== 10 ||\n            !this.state.added.includes(\"/\") ||\n            this.state.added.split(\"/\")[0] > 12 ||\n            this.state.added.split(\"/\")[1] > 31\n        ) {\n            this.setState({\n                addedErr: \"Please enter a date in the format mm/dd/yyyy\"\n            });\n            errors = true;\n        }\n\n        if (!errors) {\n            let tags;\n\n            if (String(this.state.tags.length) > 0) {\n                tags = this.state.tags.split(\" \");\n                tags = tags.filter(val => val); // get rid of empty values\n                tags = tags.sort();\n            } else {\n                tags = [];\n            }\n\n            const info = {\n                title: this.state.title,\n                year: this.state.year,\n                tags,\n                watched: this.state.watched,\n                added: this.state.added,\n                series: this.state.series,\n                review: this.state.review\n            };\n\n            if (this.state.type === \"wishlist\") {\n                info.releaseDate = this.state.releaseDate || \"Unknown\";\n            }\n\n            this.props.editMovie(\n                info,\n                this.props.match.params.title,\n                this.state.type\n            );\n            this.props.history.push(`/${this.state.type}`);\n        }\n    }\n\n    editMovie(info, type) {\n        this.props.editMovie(info, this.props.match.params.title, type);\n    }\n\n    componentWillMount() {\n        const title = this.props.match.params.title;\n        let obj;\n        const findInCollection = this.props.movies.collection.filter(movie => {\n            return movie.title === title;\n        });\n        if (findInCollection.length > 0) {\n            this.setState({ type: \"collection\" });\n            obj = this.props.movies.collection;\n        } else {\n            this.setState({ type: \"wishlist\" });\n            obj = this.props.movies.wishlist;\n        }\n\n        const info = obj.filter(movie => {\n            return movie.title === title;\n        })[0];\n\n        // if (typeof info.tags !== \"string\") {\n        //     let tagStr = \"\";\n        //     for (let i in info.tags) {\n        //         tagStr += info.tags[i];\n        //         if (i < info.tags.length - 1) {\n        //             tagStr += \" \";\n        //         }\n        //     }\n        //     info.tags = tagStr;\n        // }\n\n        if (!info.added) {\n            info.added = formatTodaysDate();\n        }\n\n        this.setState(info);\n    }\n\n    moveToCollection() {\n        // add to collection\n        const wishlist = this.props.movies.wishlist;\n        let info;\n        for (let i in wishlist) {\n            if (wishlist[i].title === this.state.title) {\n                info = wishlist[i];\n            }\n        }\n        if (typeof info.tags === \"string\") {\n            let tags = info.tags.split(\" \");\n            info.tags = tags;\n        }\n        delete info[\"releaseDate\"];\n        info.added = formatTodaysDate();\n        this.props.addMovie(info, \"collection\");\n\n        // delete from wishlist\n        this.props.deleteMovie(this.state.title, \"wishlist\");\n    }\n\n    render() {\n        const { type, title } = this.props.match.params;\n        return (\n            <div>\n                <Link to={`/${this.state.type}`}>\n                    <i className=\"material-icons small icon-link\">arrow_back</i>\n                </Link>\n                <Link to={`/${this.state.type}`}>\n                    <i\n                        className=\"material-icons small icon-link float-right\"\n                        onClick={() =>\n                            this.props.deleteMovie(\n                                this.state.title,\n                                this.state.type\n                            )\n                        }\n                        title={`Remove from ${this.state.type}`}\n                    >\n                        delete\n                    </i>\n                </Link>\n                {this.state.type === \"wishlist\" ? (\n                    <Link to=\"/collection\">\n                        <i\n                            className=\"material-icons small icon-link float-right\"\n                            title=\"Move to collection\"\n                            style={{ marginRight: \"10px\" }}\n                            onClick={() => this.moveToCollection()}\n                        >\n                            move_to_inbox\n                        </i>\n                    </Link>\n                ) : null}\n                <h5>edit {this.state.title}</h5>\n                <div className=\"row\">\n                    <MovieForm\n                        movieAction={this.editMovie}\n                        actionVar=\"edit\"\n                        type={type}\n                        title={title}\n                        getAllTags={this.props.getAllTags}\n                        movies={this.props.movies}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(EditMovie);\n","import React from \"react\";\n\nconst SortOptions = props => {\n    return (\n        <div id=\"sort-options\">\n            Sort options:{\" \"}\n            <a\n                onClick={() => props.changeSortMethod(\"dateAdded\")}\n                className={\n                    props.sortBy === \"dateAdded\"\n                        ? \"sort-option sort-option-active\"\n                        : \"sort-option\"\n                }\n            >\n                date added\n            </a>\n            {props.getSortOption(\"dateAdded\")}\n            {\" | \"}\n            <a\n                onClick={() => props.changeSortMethod(\"title\")}\n                className={\n                    props.sortBy === \"title\"\n                        ? \"sort-option sort-option-active\"\n                        : \"sort-option\"\n                }\n            >\n                title\n                {props.getSortOption(\"title\")}\n            </a>\n            {\" | \"}\n            <a\n                onClick={() => props.changeSortMethod(\"year\")}\n                className={\n                    props.sortBy === \"year\"\n                        ? \"sort-option sort-option-active\"\n                        : \"sort-option\"\n                }\n            >\n                year\n            </a>\n            {props.getSortOption(\"year\")}\n            {props.type !== \"wishlist\" ? (\n                <span>\n                    {\" | \"}\n                    <a\n                        onClick={() => props.changeSortMethod(\"review\")}\n                        className={\n                            props.sortBy === \"review\"\n                                ? \"sort-option sort-option-active\"\n                                : \"sort-option\"\n                        }\n                    >\n                        review\n                    </a>\n                    {props.getSortOption(\"review\")}\n                </span>\n            ) : null}\n        </div>\n    );\n};\n\nexport default SortOptions;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport SortOptions from \"./SortOptions\";\n\n/**\n * @param {string} sortBy: 'dateAdded', 'year', 'title'\n * @param {boolean} ascending: true or false\n * e.g. sortBy: 'title', ascending: true = alphabetical order,\n *      sortBy: 'title', ascending: false = reverse alphabetical order\n */\nclass TableList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.getSortOption = this.getSortOption.bind(this);\n        this.changeSortMethod = this.changeSortMethod.bind(this);\n    }\n\n    removeFromList(title) {\n        const rows = document.querySelectorAll(\".table-list-row\");\n        let val;\n        for (let i in rows) {\n            if (rows[i].classList) {\n                val = rows[i].classList.value;\n                if (val.substr(val.indexOf(\" \") + 1) === title) {\n                    rows[i].classList.add(\"hidden\");\n                }\n            }\n        }\n    }\n\n    sortByMethod(method, movies) {\n        if (method === \"year\" || method === \"review\") {\n            return movies.sort(function(a, b) {\n                // If same year or review or no year or review, sort by title\n                if (a[method] === b[method]) {\n                    const titleA = a.title.toLowerCase();\n                    const titleB = b.title.toLowerCase();\n                    if (titleA < titleB) {\n                        return -1;\n                    }\n                    if (titleA > titleB) {\n                        return 1;\n                    }\n                }\n                // If no value, put at end\n                if (!a[method] || a[method] === \"?\") {\n                    return 1;\n                }\n                if (!b[method] || b[method] === \"?\") {\n                    return -1;\n                }\n                return b[method] - a[method];\n            });\n        } else if (method === \"title\") {\n            return movies.sort(function(a, b) {\n                const titleA = a.title.toLowerCase();\n                const titleB = b.title.toLowerCase();\n                if (titleA < titleB) {\n                    return -1;\n                }\n                if (titleA > titleB) {\n                    return 1;\n                }\n                // If same title, sort by year\n                if (titleA === titleB) {\n                    return a.year - b.year;\n                }\n                return 0;\n            });\n        } else if (method === \"dateAdded\") {\n            // Split mm/dd/yyyy string into parts and compare each,\n            // first compare year (2), then month (0), then day (1)\n            return movies.sort(function(a, b) {\n                if (!a.added) {\n                    return -1;\n                }\n                if (!b.added) {\n                    return 1;\n                }\n\n                let dateA = a.added.split(\"/\");\n                let dateB = b.added.split(\"/\");\n\n                // Temp fix for yy formatted string\n                // TODO: make sure movies have 4 digits for year\n                if (dateA[2].length === 2) {\n                    dateA[2] = \"20\" + dateA[2];\n                }\n                if (dateB[2].length === 2) {\n                    dateB[2] = \"20\" + dateB[2];\n                }\n\n                if (dateA[2] > dateB[2]) {\n                    return -1;\n                }\n                if (dateA[2] < dateB[2]) {\n                    return 1;\n                }\n                if (dateA[2] === dateB[2]) {\n                    if (dateA[0] > dateB[0]) {\n                        return -1;\n                    }\n                    if (dateA[0] < dateB[0]) {\n                        return 1;\n                    }\n                    if (dateA[0] === dateB[0]) {\n                        if (dateA[1] > dateB[1]) {\n                            return -1;\n                        }\n                        if (dateA[1] < dateB[1]) {\n                            return 1;\n                        }\n                        // If date is exactly the same, go by title\n                        if (dateA[1] === dateB[1]) {\n                            const titleA = a.title.toLowerCase();\n                            const titleB = b.title.toLowerCase();\n                            if (titleA < titleB) {\n                                return -1;\n                            }\n                            if (titleA > titleB) {\n                                return 1;\n                            }\n                            if (titleA === titleB) {\n                                // TODO: show most recent first\n                            }\n                            return 0;\n                        }\n                        return 0;\n                    }\n                    return 0;\n                }\n                return 0;\n            });\n        }\n    }\n\n    renderMovies(movies) {\n        let rows = [];\n        const { method, ascending } = this.props.sortOption;\n        let sortedMovies = this.sortByMethod(method, movies);\n        if (!ascending) {\n            sortedMovies.reverse();\n        }\n\n        for (let i in sortedMovies) {\n            const movie = sortedMovies[i];\n            rows.push(\n                <tr\n                    key={i}\n                    className={`table-list-row ${movie.title}`}\n                    title={movie.title}\n                >\n                    <td>\n                        {movie.title}\n                        {this.props.deletable ? (\n                            <i\n                                className=\"material-icons tiny icon-link icon-link-blue\"\n                                onClick={() => this.removeFromList(movie.title)}\n                            >\n                                delete\n                            </i>\n                        ) : null}\n                        {this.props.editable ? (\n                            <Link\n                                to={`/edit/${this.props.type}/${movie.title}`}\n                            >\n                                <i className=\"material-icons tiny icon-link icon-link-blue\">\n                                    edit\n                                </i>\n                            </Link>\n                        ) : null}\n                    </td>\n                    <td>\n                        <ul className=\"tags-ul\">\n                            {this.renderTags(movie.tags)}\n                        </ul>\n                    </td>\n                    <td className=\"hide-on-med-and-down\">{movie.year}</td>\n                    <td\n                        className=\"hide-on-small-only\"\n                        style={{ textAlign: \"center\" }}\n                    >\n                        {movie.watched ? \"Yes\" : \"No\"}\n                    </td>\n                    {this.props.type === \"wishlist\" ? (\n                        <td>{movie.releaseDate}</td>\n                    ) : null}\n                    {this.props.type !== \"wishlist\" ? (\n                        <td className=\"hide-on-small-only\">\n                            {this.getStars(movie.review)}\n                        </td>\n                    ) : null}\n                </tr>\n            );\n        }\n\n        return rows;\n    }\n\n    getStars(num) {\n        let starsArr = [];\n        for (let i = 0; i < num; i++) {\n            starsArr.push(\n                <i\n                    key={i}\n                    className=\"material-icons tiny icon-link icon-link-blue\"\n                >\n                    star\n                </i>\n            );\n        }\n        return starsArr;\n    }\n\n    renderTags(tags) {\n        let renderTagArr = [];\n\n        for (let i in tags) {\n            let tagClass = \"tag-result\";\n            if (\n                this.props.includeTags &&\n                this.props.includeTags.includes(tags[i])\n            ) {\n                tagClass += \" tag-match\";\n            }\n            renderTagArr.push(\n                <li className={tagClass} key={i}>\n                    {tags[i]}\n                </li>\n            );\n        }\n\n        return renderTagArr;\n    }\n\n    changeSortMethod(type) {\n        if (this.props.sortOption.method === type) {\n            if (this.props.sortOption.ascending) {\n                this.props.changeSortOption({ method: type, ascending: false });\n            } else {\n                this.props.changeSortOption({ method: type, ascending: true });\n            }\n        } else {\n            this.props.changeSortOption({ method: type, ascending: true });\n        }\n    }\n\n    getSortOption(type) {\n        let icon;\n        let iconClass = \"material-icons tiny icon-link\";\n        if (this.props.sortOption.method === type) {\n            iconClass += \" icon-link-blue\";\n            if (this.props.sortOption.ascending) {\n                icon = \"up\";\n            } else {\n                icon = \"down\";\n            }\n        } else {\n            icon = \"up\";\n        }\n\n        return <i className={iconClass}>{`arrow_drop_${icon}`}</i>;\n    }\n\n    componentWillMount() {\n        if (\n            this.props.type === \"wishlist\" &&\n            this.props.sortOption.method === \"review\"\n        ) {\n            this.changeSortMethod(\"dateAdded\");\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <SortOptions\n                    sortBy={this.props.sortOption.method}\n                    changeSortMethod={this.changeSortMethod}\n                    getSortOption={this.getSortOption}\n                    type={this.props.type}\n                />\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th>Tags</th>\n                            <th className=\"hide-on-med-and-down\">Year</th>\n                            <th className=\"hide-on-small-only\">Watched?</th>\n                            {this.props.type === \"wishlist\" ? (\n                                <th>Release Date</th>\n                            ) : null}\n                            {this.props.type !== \"wishlist\" ? (\n                                <th className=\"hide-on-small-only\">\n                                    Your Review\n                                </th>\n                            ) : null}\n                        </tr>\n                    </thead>\n                    <tbody>{this.renderMovies(this.props.movies)}</tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default TableList;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport TableList from \"../components/TableList\";\nimport NoMovies from \"../components/NoMovies\";\nimport PageHeading from \"../components/PageHeading\";\n\nconst Collection = (props) => {\n    // fix for tags becoming strings for no reason??? wtf\n    // let myProps = props.movies;\n    // for (let i in props.movies) {\n    //     if (typeof props.movies[i].tags === \"string\") {\n    //         let tags;\n    //         if (props.movies[i].tags.length > 0) {\n    //             tags = props.movies[i].tags.split(\" \");\n    //             tags = tags.filter(val => val); // get rid of empty values\n    //         } else {\n    //             tags = [];\n    //         }\n    //         myProps[i].tags = tags;\n    //     }\n    // }\n\n    return (\n        <div>\n            <PageHeading heading=\"Collection\" />\n            {props.movies.length > 1 ? (\n                <div>\n                    <Link to=\"/add/collection\">\n                        <i className=\"material-icons small icon-link float-right\">\n                            add_circle\n                        </i>\n                    </Link>\n                    <TableList\n                        movies={props.movies}\n                        type=\"collection\"\n                        editable={true}\n                        deletable={false}\n                        sortOption={props.sortOption}\n                        changeSortOption={props.changeSortOption}\n                    />\n                    <div className=\"dev-options\">\n                        <a\n                            className=\"dev-option\"\n                            onClick={() => props.deleteAll(\"collection\")}\n                        >\n                            Delete collection\n                        </a>\n                    </div>\n                </div>\n            ) : (\n                <NoMovies updateLocalStorage={props.updateLocalStorage} />\n            )}\n        </div>\n    );\n};\n\nexport default Collection;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport TableList from \"../components/TableList\";\nimport PageHeading from \"../components/PageHeading\";\n\nconst Wishlist = (props) => {\n    const wishlist = props.wishlist;\n    for (let i in wishlist) {\n        if (typeof wishlist[i].tags === \"string\") {\n            let tags;\n            if (wishlist[i].tags.length > 0) {\n                tags = wishlist[i].tags.split(\" \");\n                tags = tags.filter((val) => val); // get rid of empty values\n            } else {\n                tags = [];\n            }\n            wishlist[i].tags = tags;\n        }\n    }\n\n    return (\n        <div>\n            <PageHeading heading=\"Wishlist\" />\n            <Link to=\"/add/wishlist\">\n                <i className=\"material-icons small icon-link float-right\">\n                    add_circle\n                </i>\n            </Link>\n            <TableList\n                movies={wishlist}\n                type=\"wishlist\"\n                editable={true}\n                deletable={false}\n                sortOption={props.sortOption}\n                changeSortOption={props.changeSortOption}\n            />\n            <div className=\"dev-options\">\n                <a\n                    className=\"dev-option\"\n                    onClick={() => props.deleteAll(\"wishlist\")}\n                >\n                    Delete wishlist\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport default Wishlist;\n","import React, { Component } from \"react\";\nimport { fillMyMovies } from \"../myMovies\";\nimport PageHeading from \"../components/PageHeading\";\n\nfunction copyExportData(e) {\n    var copyData = document.getElementById(\"account-export\");\n    copyData.select();\n    document.execCommand(\"copy\");\n    alert(\"Copy successful.\");\n}\n\nclass Account extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { exportData: \"\", importData: \"\" };\n    }\n\n    onExportDataChange(e) {\n        this.setState({ exportData: e.target.value });\n    }\n\n    onImportDataChange(e) {\n        this.setState({ importData: e.target.value });\n    }\n\n    importData(e) {\n        const movies = JSON.parse(this.state.importData);\n        this.props.updateLocalStorage(movies.collection, movies.wishlist);\n        alert(\"Import successful.\");\n    }\n\n    fillDevMovies(obj) {\n        this.props.updateLocalStorage(obj.collection, obj.wishlist);\n    }\n\n    componentWillMount() {\n        this.setState({ exportData: JSON.stringify(this.props.movies) });\n    }\n\n    render() {\n        return (\n            <div>\n                <PageHeading heading=\"My Account\" />\n                <div className=\"row\">\n                    <div className=\"input-field col m6 s12 no-padding-left\">\n                        <p className=\"form-label\">\n                            <b>EXPORT DATA</b>\n                            <br />\n                            Copy your data and save it in a JSON file\n                        </p>\n                        <button\n                            className=\"btn blue lighten-2\"\n                            style={{ margin: \"22px 0\" }}\n                            onClick={(e) => copyExportData(e)}\n                        >\n                            Copy to Clipboard\n                        </button>\n                        <textarea\n                            id=\"account-export\"\n                            className=\"materialize-textarea\"\n                            value={this.state.exportData}\n                            onChange={(e) => this.onExportDataChange(e)}\n                        />\n                    </div>\n                    <div className=\"input-field col m6 s12 no-padding-right\">\n                        <p className=\"form-label\">\n                            <b>IMPORT DATA</b>\n                            <br />\n                            Paste your data here and click \"Import Data\"\n                        </p>\n                        <button\n                            className=\"btn blue lighten-2\"\n                            style={{ margin: \"22px 0\" }}\n                            onClick={(e) => this.importData(e)}\n                        >\n                            Import Data\n                        </button>\n                        <textarea\n                            id=\"account-import\"\n                            className=\"materialize-textarea\"\n                            value={this.state.importData}\n                            onChange={(e) => this.onImportDataChange(e)}\n                        />\n                    </div>\n                </div>\n                <div className=\"dev-options\">\n                    <a\n                        className=\"dev-option\"\n                        onClick={() => this.fillDevMovies(fillMyMovies())}\n                    >\n                        Fill dev movies\n                    </a>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Account;\n","import React from \"react\";\n\nconst IMDBOptions = props => {\n    function displayOptions() {\n        let i = -1;\n        return props.data.map(movie => {\n            i++;\n            return (\n                <div\n                    className=\"col l3 m4 s12 imdb-result flex\"\n                    key={i}\n                    onClick={() => props.chooseMovie(movie.Title)}\n                >\n                    {movie.Poster !== \"N/A\" ? (\n                        <div>\n                            <img\n                                src={movie.Poster}\n                                alt={movie.Title}\n                                title={movie.Title}\n                                className=\"movie-poster\"\n                            />\n                            <br />\n                            {movie.Title}{\" \"}\n                            {movie.Year ? `(${movie.Year})` : null}\n                        </div>\n                    ) : null}\n                </div>\n            );\n        });\n    }\n\n    return <div className=\"row flex\">{displayOptions()}</div>;\n};\n\nexport default IMDBOptions;\n","import React from \"react\";\nimport { withRouter } from \"react-router\";\n\nconst IMDBResult = props => {\n    function addMovie(data, type) {\n        props.addMovie({ title: data.Title, year: data.Year || \"\" }, type);\n        props.history.push(`/edit/${data.Title}`);\n    }\n\n    const data = props.chosenData[0];\n    return (\n        <div className=\"row\">\n            <div className=\"col s12 link\">\n                <a onClick={() => props.changeDisplay(\"options\")}>\n                    {\" \"}\n                    <i className=\"material-icons tiny icon-link\">\n                        arrow_back\n                    </i>{\" \"}\n                    Back to view all results\n                </a>\n            </div>\n            <div className=\"col m6 s12\">\n                <p className=\"imdb-title\">\n                    {data.Title} ({data.Year})\n                </p>\n                <img\n                    className=\"movie-poster-lg\"\n                    src={data.Poster}\n                    alt={data.Title}\n                />\n            </div>\n            <div className=\"col m6 s12\">\n                <br />\n                <p\n                    className=\"imdb-action\"\n                    onClick={() => addMovie(data, \"collection\")}\n                >\n                    Move to collection{\" \"}\n                    <i\n                        className=\"material-icons small icon-link\"\n                        title=\"Move to collection\"\n                        style={{ marginRight: \"10px\" }}\n                    >\n                        move_to_inbox\n                    </i>\n                </p>\n                <p\n                    className=\"imdb-action\"\n                    onClick={() => addMovie(data, \"wishlist\")}\n                >\n                    Move to wishlist{\" \"}\n                    <i\n                        className=\"material-icons small icon-link\"\n                        title=\"Move to wishlist\"\n                        style={{ marginRight: \"10px\" }}\n                    >\n                        filter_vintage\n                    </i>\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(IMDBResult);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { OMDB_API } from \"../utils\";\n\nimport PageHeading from \"../components/PageHeading\";\n// options: displays all matching movies\nimport IMDBOptions from \"../components/IMDBOptions\";\n// results: shows only the movie the user selected\nimport IMDBResult from \"../components/IMDBResult\";\n\nclass IMDB extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            search: \"\",\n            data: [],\n            display: \"\",\n            chosenData: {}\n        };\n\n        this.getData = this.getData.bind(this);\n        this.chooseMovie = this.chooseMovie.bind(this);\n        this.changeDisplay = this.changeDisplay.bind(this);\n    }\n\n    onSearchChange(e) {\n        this.setState({ search: e.target.value, display: \"\" });\n    }\n\n    getData(e) {\n        e.preventDefault();\n        axios\n            .get(`${OMDB_API}type=\"movie\"&s=${this.state.search}`)\n            .then((res) => {\n                this.setState({ data: res.data.Search, display: \"options\" });\n            })\n            .catch(function (err) {\n                console.log(err);\n            });\n    }\n\n    chooseMovie(title) {\n        const chosenData = this.state.data.filter((movie) => {\n            return movie.Title === title;\n        });\n        this.setState({ chosenData, display: \"result\" });\n    }\n\n    changeDisplay(display) {\n        this.setState({ display });\n    }\n\n    render() {\n        return (\n            <div>\n                <PageHeading heading=\"IMDB Search\" />\n                <br />\n                <form onSubmit={(e) => this.getData(e)}>\n                    <div className=\"input-field col s12\">\n                        <p className=\"form-label\">Title</p>\n                        <input\n                            type=\"text\"\n                            value={this.state.search}\n                            onChange={(e) => this.onSearchChange(e)}\n                        />\n                    </div>\n                </form>\n                {this.state.display === \"options\" ? (\n                    <IMDBOptions\n                        data={this.state.data}\n                        chooseMovie={this.chooseMovie}\n                    />\n                ) : null}\n                {this.state.display === \"result\" ? (\n                    <IMDBResult\n                        changeDisplay={this.changeDisplay}\n                        chosenData={this.state.chosenData}\n                        addMovie={this.props.addMovie}\n                    />\n                ) : null}\n            </div>\n        );\n    }\n}\n\nexport default IMDB;\n","import React from \"react\";\n\nimport TableList from \"../components/TableList\";\n\nconst SearchResult = props => {\n    const { collection, searchOptions } = props;\n    const {\n        includeTags,\n        excludeTags,\n        unwatchedOnly,\n        reviewFilter,\n        includeUnreviewed,\n        yearFilter,\n        includeNoYear\n    } = searchOptions;\n\n    function getMatches() {\n        let matches = [];\n\n        for (let movie in collection) {\n            const movieInfo = collection[movie];\n            const { tags } = movieInfo;\n\n            let matchesIncludeTags = false;\n            let matchesExcludeTags = false;\n            let matchesUnwatchedOnly = false;\n            let matchesReviewFilter = false;\n            let matchesYearFilter = false;\n\n            // If there's no includeTags option, it matches.\n            // If there is, and it has matching tag(s), it matches.\n            if (includeTags.length > 0) {\n                let hasIncludeTags = includeTags.some(\n                    tag => tags.indexOf(tag) >= 0\n                );\n                matchesIncludeTags = hasIncludeTags;\n            } else {\n                matchesIncludeTags = true;\n            }\n\n            // If there's no excludeTags option, it matches.\n            // If there is, and it does not have matching tag(s), it matches.\n            if (excludeTags.length > 0) {\n                let hasExcludeTags = excludeTags.some(\n                    tag => tags.indexOf(tag) >= 0\n                );\n                matchesExcludeTags = !hasExcludeTags;\n            } else {\n                matchesExcludeTags = true;\n            }\n\n            // If there's no unwatchedOnly option, it matches.\n            // If there is, and it is unwatched, it matches.\n            if (!unwatchedOnly) {\n                matchesUnwatchedOnly = true;\n            } else {\n                if (!movieInfo.watched) {\n                    matchesUnwatchedOnly = true;\n                } else {\n                    matchesUnwatchedOnly = false;\n                }\n            }\n\n            // Check if movie review is within the specified range.\n            // If there's no review, check if user wants non-reviewed\n            // movies to come up.\n            const { review } = movieInfo;\n            if (!review) {\n                if (includeUnreviewed) {\n                    matchesReviewFilter = true;\n                } else {\n                    matchesReviewFilter = false;\n                }\n            } else {\n                if (review >= reviewFilter[0] && review <= reviewFilter[1]) {\n                    matchesReviewFilter = true;\n                } else {\n                    matchesReviewFilter = false;\n                }\n            }\n\n            // Check if movie year is within the specified range.\n            // If there's no year entered, check if user\n            // wants it to come up.\n            const { year } = movieInfo;\n            if (!year || year === \"?\") {\n                if (includeNoYear) {\n                    matchesYearFilter = true;\n                } else {\n                    matchesYearFilter = false;\n                }\n            } else {\n                if (year >= yearFilter[0] && year <= yearFilter[1]) {\n                    matchesYearFilter = true;\n                } else {\n                    matchesYearFilter = false;\n                }\n            }\n\n            // Make sure this movie entirely matches the user's search\n            // and add it to the matches if so.\n            if (\n                matchesIncludeTags &&\n                matchesExcludeTags &&\n                matchesUnwatchedOnly &&\n                matchesReviewFilter &&\n                matchesYearFilter\n            ) {\n                matches.push(movieInfo);\n            }\n        }\n\n        return matches;\n    }\n\n    return (\n        <div>\n            <h2>Search Result</h2>\n            <TableList\n                movies={getMatches()}\n                editable={false}\n                deletable={false}\n                sortOption={props.sortOption}\n                changeSortOption={props.changeSortOption}\n                includeTags={searchOptions.includeTags}\n            />\n        </div>\n    );\n};\n\nexport default SearchResult;\n","import _ from \"lodash\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Search from \"./pages/Search\";\nimport AddMovie from \"./pages/AddMovie\";\nimport EditMovie from \"./pages/EditMovie\";\nimport Collection from \"./pages/Collection\";\nimport Wishlist from \"./pages/Wishlist\";\nimport Account from \"./pages/Account\";\nimport IMDB from \"./pages/IMDB\";\nimport SearchResult from \"./pages/SearchResult\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            collection: [],\n            wishlist: [],\n            searchOptions: {\n                includeTags: [],\n                excludeTags: [],\n                unwatchedOnly: false,\n                watchedOnly: false,\n                reviewFilter: [1, 5],\n                includeUnreviewed: true,\n                yearFilter: [null, null],\n                includeNoYear: true\n            },\n            sortOption: { method: \"dateAdded\", ascending: true }\n        };\n\n        this.updateLocalStorage = this.updateLocalStorage.bind(this);\n        this.updateState = this.updateState.bind(this);\n        this.addMovie = this.addMovie.bind(this);\n        this.editMovie = this.editMovie.bind(this);\n        this.deleteMovie = this.deleteMovie.bind(this);\n        this.deleteAll = this.deleteAll.bind(this);\n        this.getAllTags = this.getAllTags.bind(this);\n        this.changeSearchOptions = this.changeSearchOptions.bind(this);\n        this.getYearRange = this.getYearRange.bind(this);\n        this.changeSortOption = this.changeSortOption.bind(this);\n    }\n\n    updateLocalStorage(collection, wishlist) {\n        // Divide into 4 to prevent maxing out localStorage\n        let coll_1 = [];\n        let coll_2 = [];\n        let coll_3 = [];\n        let coll_4 = [];\n        const coll = collection;\n\n        for (let i in coll) {\n            switch (i % 4) {\n                case 0:\n                    coll_1.push(coll[i]);\n                    break;\n                case 1:\n                    coll_2.push(coll[i]);\n                    break;\n                case 2:\n                    coll_3.push(coll[i]);\n                    break;\n                case 3:\n                    coll_4.push(coll[i]);\n                    break;\n                default:\n                    coll_1.push(coll[i]);\n                    break;\n            }\n        }\n\n        localStorage.setItem(\"movieState_collection_1\", JSON.stringify(coll_1));\n        localStorage.setItem(\"movieState_collection_2\", JSON.stringify(coll_2));\n        localStorage.setItem(\"movieState_collection_3\", JSON.stringify(coll_3));\n        localStorage.setItem(\"movieState_collection_4\", JSON.stringify(coll_4));\n        localStorage.setItem(\"movieState_wishlist\", JSON.stringify(wishlist));\n    }\n\n    updateState(coll_1, coll_2, coll_3, coll_4) {\n        const coll = _.union(coll_1, coll_2, coll_3, coll_4);\n\n        this.setState({\n            collection: coll || [],\n            wishlist:\n                JSON.parse(localStorage.getItem(\"movieState_wishlist\")) || []\n        });\n\n        this.updateYearRange(coll);\n    }\n\n    addMovie(movie, type) {\n        let current = this.state[type];\n        current.push(movie);\n\n        this.setState({ [type]: current });\n\n        this.updateYearRange(current);\n    }\n\n    editMovie(info, oldTitle, type) {\n        let newMovies = this.state[type];\n\n        for (let i in newMovies) {\n            if (newMovies[i].title === oldTitle) {\n                newMovies[i] = info;\n            }\n        }\n        if (info.title !== oldTitle) {\n            delete newMovies[oldTitle];\n        }\n\n        this.setState({ [type]: newMovies });\n\n        this.updateYearRange(newMovies);\n    }\n\n    deleteMovie(title, type) {\n        let newMovies = [];\n\n        this.setState({ [type]: newMovies });\n\n        this.updateYearRange(newMovies);\n    }\n\n    updateYearRange(coll) {\n        let { searchOptions } = this.state;\n        searchOptions.yearFilter = [\n            this.getYearRange(coll).min,\n            this.getYearRange(coll).max\n        ];\n        this.setState({ searchOptions });\n    }\n\n    deleteAll(type) {\n        this.setState({ [type]: [] });\n    }\n\n    getAllTags() {\n        let tagList = [];\n\n        for (let i in this.state.collection) {\n            for (let j in this.state.collection[i].tags) {\n                if (!tagList.includes(this.state.collection[i].tags[j])) {\n                    tagList.push(this.state.collection[i].tags[j]);\n                }\n            }\n        }\n\n        tagList = tagList.sort();\n        return tagList;\n    }\n\n    changeSearchOptions(key, value) {\n        let searchOptions = this.state.searchOptions;\n        searchOptions[key] = value;\n        this.setState({ searchOptions });\n        localStorage.setItem(\n            \"movieState_searchOptions\",\n            JSON.stringify(searchOptions)\n        );\n    }\n\n    getYearRange(coll) {\n        if (!coll) {\n            coll = this.state.collection;\n        }\n        let minYear = null;\n        let maxYear = null;\n\n        for (let i in coll) {\n            const year = parseInt(coll[i].year, 10);\n            if (year !== \"?\") {\n                if (!minYear) {\n                    minYear = year;\n                }\n                if (!maxYear) {\n                    maxYear = year;\n                }\n\n                if (year < minYear) {\n                    minYear = year;\n                }\n\n                if (year > maxYear) {\n                    maxYear = year;\n                }\n            }\n        }\n\n        return { min: minYear, max: maxYear };\n    }\n\n    changeSortOption(sortOption) {\n        this.setState({ sortOption });\n    }\n\n    componentDidUpdate() {\n        this.updateLocalStorage(this.state.collection, this.state.wishlist);\n    }\n\n    componentWillMount() {\n        const coll_1 = JSON.parse(\n            localStorage.getItem(\"movieState_collection_1\")\n        );\n        const coll_2 = JSON.parse(\n            localStorage.getItem(\"movieState_collection_2\")\n        );\n        const coll_3 = JSON.parse(\n            localStorage.getItem(\"movieState_collection_3\")\n        );\n        const coll_4 = JSON.parse(\n            localStorage.getItem(\"movieState_collection_4\")\n        );\n        this.updateState(coll_1, coll_2, coll_3, coll_4);\n\n        const searchOptions = JSON.parse(\n            localStorage.getItem(\"movieState_searchOptions\")\n        );\n\n        if (searchOptions) {\n            this.setState({ searchOptions });\n        }\n    }\n\n    render() {\n        const { collection, wishlist, searchOptions, sortOption } = this.state;\n        return (\n            <div className=\"App\">\n                <BrowserRouter>\n                    <div>\n                        <Header props={this.context} />\n                        <div\n                            className=\"container\"\n                            style={{ marginTop: \"20px\" }}\n                        >\n                            <Switch>\n                                <Route\n                                    exact\n                                    path=\"/\"\n                                    render={() => (\n                                        <Search\n                                            movies={collection}\n                                            getAllTags={this.getAllTags}\n                                            searchOptions={searchOptions}\n                                            changeSearchOptions={\n                                                this.changeSearchOptions\n                                            }\n                                            getYearRange={this.getYearRange}\n                                            updateLocalStorage={\n                                                this.updateLocalStorage\n                                            }\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    path=\"/search_result\"\n                                    render={() => (\n                                        <SearchResult\n                                            collection={collection}\n                                            searchOptions={searchOptions}\n                                            sortOption={sortOption}\n                                            changeSortOption={\n                                                this.changeSortOption\n                                            }\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    path=\"/add/:type\"\n                                    render={() => (\n                                        <AddMovie\n                                            addMovie={this.addMovie}\n                                            editMovie={this.editMovie}\n                                            getAllTags={this.getAllTags}\n                                            movies={this.state}\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    path=\"/edit/:type/:title\"\n                                    render={() => (\n                                        <EditMovie\n                                            movies={this.state}\n                                            addMovie={this.addMovie}\n                                            getAllTags={this.getAllTags}\n                                            editMovie={this.editMovie}\n                                            deleteMovie={this.deleteMovie}\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    path=\"/collection\"\n                                    render={() => (\n                                        <Collection\n                                            movies={collection}\n                                            deleteAll={this.deleteAll}\n                                            sortOption={sortOption}\n                                            changeSortOption={\n                                                this.changeSortOption\n                                            }\n                                            updateLocalStorage={\n                                                this.updateLocalStorage\n                                            }\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    path=\"/wishlist\"\n                                    render={() => (\n                                        <Wishlist\n                                            wishlist={wishlist}\n                                            deleteAll={this.deleteAll}\n                                            sortOption={sortOption}\n                                            changeSortOption={\n                                                this.changeSortOption\n                                            }\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    path=\"/account\"\n                                    render={() => (\n                                        <Account\n                                            updateLocalStorage={\n                                                this.updateLocalStorage\n                                            }\n                                            updateState={this.updateState}\n                                            movies={this.state}\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    path=\"/imdb\"\n                                    render={() => (\n                                        <IMDB addMovie={this.addMovie} />\n                                    )}\n                                />\n                            </Switch>\n                        </div>\n                    </div>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nconst render = Component => {\n    return ReactDOM.render(<Component />, document.getElementById(\"root\"));\n};\n\nrender(App);\n\nif (module.hot) {\n    module.hot.accept(\"./App\", () => {\n        const NextApp = require(\"./App\").default;\n        render(NextApp);\n    });\n}\n\nregisterServiceWorker();\n"],"sourceRoot":""}