{"version":3,"sources":["components/Header.js","components/TagSelect.js","pages/Search.js","components/MovieForm.js","utils.js","pages/AddMovie.js","pages/EditMovie.js","components/SortOptions.js","components/TableList.js","pages/Collection.js","pages/Wishlist.js","myMovies.js","pages/Account.js","components/IMDBOptions.js","components/IMDBResult.js","pages/IMDB.js","pages/SearchResult.js","App.js","registerServiceWorker.js","index.js"],"names":["withRouter","props","getClassName","url","location","pathname","getLink","className","Link","to","getText","id","data-target","TagSelect","state","selected","options","tags","this","getAllTags","i","tag","skip","includes","push","value","label","e","setState","getTagsFromSelect","type","creatable","getOptions","isSearchable","isMulti","onChange","handleChange","Component","searchOptions","reviewFilter","yearFilter","changeSearchOptions","onUnwatchedOnlyChange","unwatchedOnly","onWatchedOnlyChange","watchedOnly","getStarClass","starClass","length","getReviewMinMax","onReviewFilterChange","review","parseInt","target","onYearFilterChange","year","excludeTags","includeTags","onClick","checked","starArr","key","renderReviewFilter","min","max","includeUnreviewed","getYearRange","includeNoYear","history","MovieForm","info","title","watched","added","series","releaseDate","err","bind","num","preventDefault","formErrors","movieAction","movies","actionVar","movieInfo","filter","movie","onSubmit","submit","onInputChange","yearErr","onWatchedChange","addedErr","onReviewChange","release","formErr","formatTodaysDate","now","Date","day","getDate","String","month","getMonth","getFullYear","AddMovie","addMovie","today","match","params","EditMovie","editMovie","tagsErr","errors","titleErr","split","val","sort","obj","collection","wishlist","deleteMovie","style","marginRight","moveToCollection","SortOptions","changeSortMethod","sortBy","getSortOption","TableList","rows","document","querySelectorAll","classList","substr","indexOf","add","method","a","b","titleA","toLowerCase","titleB","dateA","dateB","sortOption","ascending","sortedMovies","sortByMethod","reverse","deletable","removeFromList","editable","renderTags","textAlign","getStars","starsArr","renderTagArr","tagClass","changeSortOption","icon","iconClass","renderMovies","Collection","deleteAll","Wishlist","date","Account","exportData","importData","JSON","parse","updateLocalStorage","alert","stringify","margin","getElementById","select","execCommand","onExportDataChange","onImportDataChange","fillDevMovies","IMDBOptions","data","map","chooseMovie","Title","Poster","src","alt","Year","displayOptions","chosenData","changeDisplay","IMDB","search","display","getData","axios","get","then","res","Search","catch","console","log","onSearchChange","SearchResult","matches","matchesIncludeTags","matchesExcludeTags","matchesUnwatchedOnly","matchesReviewFilter","matchesYearFilter","some","getMatches","App","updateState","coll_1","coll_2","coll_3","coll_4","coll","localStorage","setItem","_","union","getItem","updateYearRange","current","oldTitle","newMovies","tagList","j","minYear","maxYear","BrowserRouter","context","marginTop","Switch","Route","exact","path","render","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","URL","process","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9689ff17.chunk.js","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n    function getClassName(url) {\n        const path = props.location.pathname;\n        if (path === url) {\n            return \"active\";\n        } else {\n            return \"\";\n        }\n    }\n\n    function getText(url) {\n        switch (url) {\n            case \"/collection\":\n                return \"My Collection\";\n            case \"/wishlist\":\n                return \"Wishlist\";\n            case \"/imdb\":\n                return \"IMDB\";\n            case \"/account\":\n                return \"Account\";\n            default:\n                return \"Pick a Movie\";\n        }\n    }\n\n    function getLink(url) {\n        return (\n            <li className={getClassName(url)}>\n                <Link to={url}>{getText(url)}</Link>\n            </li>\n        );\n    }\n\n    return (\n        <div id=\"header\">\n            <nav className=\"nav blue lighten-2\">\n                <div className=\"nav-wrapper\">\n                    <a className=\"brand-logo right\">moviecola</a>\n                    <ul className=\"left hide-on-med-and-down\">\n                        {getLink(\"/\")}\n                        {getLink(\"/collection\")}\n                        {getLink(\"/wishlist\")}\n                        {getLink(\"/imdb\")}\n                        {getLink(\"/account\")}\n                    </ul>\n                    <a\n                        data-target=\"mobile-demo\"\n                        className=\"sidenav-trigger hide-on-large\"\n                    >\n                        <i className=\"material-icons\">menu</i>\n                    </a>\n                </div>\n            </nav>\n\n            <ul className=\"sidenav hide-on-large\" id=\"mobile-demo\">\n                {getLink(\"/\")}\n                {getLink(\"/collection\")}\n                {getLink(\"/wishlist\")}\n                {getLink(\"/imdb\")}\n                {getLink(\"/account\")}\n            </ul>\n        </div>\n    );\n};\n\nexport default withRouter(Header);\n","import React, { Component } from \"react\";\nimport Select from \"react-select\";\nimport Creatable from \"react-select/lib/Creatable\";\n\nclass TagSelect extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { selected: [] };\n    }\n\n    getOptions() {\n        let options = [];\n        const tags = this.props.getAllTags();\n\n        for (let i in tags) {\n            const tag = tags[i];\n            if (!this.props.skip || !this.props.skip.includes(tag)) {\n                options.push({ value: tag, label: tag });\n            }\n        }\n\n        return options;\n    }\n\n    handleChange(e) {\n        this.setState({ selected: e });\n\n        let tags = [];\n        for (let i in e) {\n            tags.push(e[i].value);\n        }\n        this.props.getTagsFromSelect(tags, this.props.type);\n    }\n\n    componentWillMount() {\n        // Start out with tags selected if need be\n        if (this.props.tags) {\n            let selected = [];\n            const tags = this.props.tags;\n            for (let i in tags) {\n                selected.push({\n                    value: tags[i],\n                    label: tags[i]\n                });\n            }\n            this.setState({ selected });\n        }\n    }\n\n    render() {\n        if (this.props.creatable) {\n            return (\n                <Creatable\n                    options={this.getOptions()}\n                    isSearchable={true}\n                    isMulti={true}\n                    value={this.state.selected}\n                    onChange={e => this.handleChange(e)}\n                />\n            );\n        } else {\n            return (\n                <Select\n                    options={this.getOptions()}\n                    isSearchable={true}\n                    isMulti={true}\n                    value={this.state.selected}\n                    onChange={e => this.handleChange(e)}\n                />\n            );\n        }\n    }\n}\n\nexport default TagSelect;\n","import React from \"react\";\nimport { withRouter } from \"react-router\";\n\nimport TagSelect from \"../components/TagSelect\";\n\n// TODO: error check include & exclude same tag\nconst Search = props => {\n    const { searchOptions } = props;\n    const { reviewFilter, yearFilter } = searchOptions;\n\n    function getTagsFromSelect(tags, type) {\n        if (type === \"search_option_include\") {\n            props.changeSearchOptions(\"includeTags\", tags);\n        } else {\n            props.changeSearchOptions(\"excludeTags\", tags);\n        }\n    }\n\n    function onUnwatchedOnlyChange() {\n        // If becoming true, make sure watchedOnly is false\n        if (!props.searchOptions.unwatchedOnly) {\n            props.changeSearchOptions(\"watchedOnly\", false);\n        }\n        // Toggle unwatchedOnly option\n        props.changeSearchOptions(\n            \"unwatchedOnly\",\n            !props.searchOptions.unwatchedOnly\n        );\n    }\n\n    function onWatchedOnlyChange() {\n        // If becoming true, make sure watchedOnly is false\n        if (!props.searchOptions.watchedOnly) {\n            props.changeSearchOptions(\"unwatchedOnly\", false);\n        }\n        // Toggle unwatchedOnly option\n        props.changeSearchOptions(\n            \"watchedOnly\",\n            !props.searchOptions.watchedOnly\n        );\n    }\n\n    function getStarClass(i) {\n        let starClass = \"material-icons small icon-link review-star no-hover\";\n        // If this number is in the reviewFilter,\n        // or between 2 reviewFilter numbers, add active class\n        if (reviewFilter.includes(i)) {\n            starClass += \" review-star-active\";\n        } else if (reviewFilter.length > 1) {\n            if (i >= reviewFilter[0] && i <= reviewFilter[1]) {\n                starClass += \" review-star-active\";\n            }\n        }\n        return starClass;\n    }\n\n    function getReviewMinMax(type) {\n        if (type === \"min\") {\n            // Get the minimum value for the max input.\n            // 1 if there's no set min,\n            // otherwise it will be the min + 1.\n            if (!reviewFilter[0]) {\n                return 1;\n            } else {\n                return reviewFilter[0] + 1;\n            }\n        } else {\n            // Get the maximum value for the min input.\n            // 5 if there's no set max,\n            // otherwise it will be the max - 1.\n            if (!reviewFilter[1]) {\n                return 5;\n            } else {\n                return reviewFilter[1] - 1;\n            }\n        }\n    }\n\n    function renderReviewFilter() {\n        let starArr = [];\n        for (let i = 1; i <= 5; i++) {\n            starArr.push(\n                <i className={getStarClass(i)} key={i}>\n                    star\n                </i>\n            );\n        }\n\n        return starArr;\n    }\n\n    function onReviewFilterChange(e, type) {\n        const review = parseInt(e.target.value, 10);\n\n        if (type === \"min\") {\n            props.changeSearchOptions(\"reviewFilter\", [\n                review,\n                reviewFilter[1]\n            ]);\n        } else {\n            props.changeSearchOptions(\"reviewFilter\", [\n                reviewFilter[0],\n                review\n            ]);\n        }\n    }\n\n    function onYearFilterChange(e, type) {\n        const year = parseInt(e.target.value, 10);\n\n        if (type === \"min\") {\n            props.changeSearchOptions(\"yearFilter\", [year, yearFilter[1]]);\n        } else {\n            props.changeSearchOptions(\"yearFilter\", [yearFilter[0], year]);\n        }\n    }\n\n    function submitSearch() {\n        // TODO: Error checks\n        // e.g. make sure min & max reviews are valid\n\n        // Reroute to SearchResult page\n        props.history.push(\"/search_result\");\n    }\n\n    return (\n        <div id=\"search\">\n            <div className=\"row\">\n                <div className=\"col s12\">\n                    <h2>Search</h2>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col s12\">\n                    <h6>Include tags:</h6>\n                    <TagSelect\n                        creatable={false}\n                        getAllTags={props.getAllTags}\n                        getTagsFromSelect={getTagsFromSelect}\n                        type=\"search_option_include\"\n                        skip={searchOptions.excludeTags}\n                        tags={searchOptions.includeTags}\n                    />\n                </div>\n            </div>\n            {/* TODO: add use only */}\n            <div className=\"row\">\n                <div className=\"col s12\">\n                    <h6>Exclude tags:</h6>\n                    <TagSelect\n                        creatable={false}\n                        getAllTags={props.getAllTags}\n                        getTagsFromSelect={getTagsFromSelect}\n                        type=\"search_option_exclude\"\n                        skip={searchOptions.includeTags}\n                        tags={searchOptions.excludeTags}\n                    />\n                </div>\n            </div>\n            <br />\n            <div className=\"row\">\n                <div className=\"col l4 s12\">\n                    <h3>watched/unwatched only</h3>\n                    <div\n                        className=\"col checkbox-wrapper\"\n                        onClick={() => onUnwatchedOnlyChange()}\n                    >\n                        <input\n                            type=\"checkbox\"\n                            checked={\n                                props.searchOptions.unwatchedOnly ? true : false\n                            }\n                            onChange={() => onUnwatchedOnlyChange()}\n                        />\n                        <span>Unwatched only</span>\n                    </div>\n                    <div\n                        className=\"col checkbox-wrapper\"\n                        onClick={() => onWatchedOnlyChange()}\n                    >\n                        <input\n                            type=\"checkbox\"\n                            checked={\n                                props.searchOptions.watchedOnly ? true : false\n                            }\n                            onChange={() => onWatchedOnlyChange()}\n                        />\n                        <span>Watched only</span>\n                    </div>\n                </div>\n                <div className=\"col l4 s12\">\n                    <h3>filter by your reviews</h3>\n                    {renderReviewFilter()}\n                    <br />\n                    Min:{\" \"}\n                    <input\n                        type=\"number\"\n                        className=\"review-search-input\"\n                        value={reviewFilter[0]}\n                        min=\"1\"\n                        max={getReviewMinMax(\"max\")}\n                        onChange={e => onReviewFilterChange(e, \"min\")}\n                    />\n                    Max:{\" \"}\n                    <input\n                        type=\"number\"\n                        className=\"review-search-input\"\n                        value={reviewFilter[1]}\n                        min={getReviewMinMax(\"min\")}\n                        max=\"5\"\n                        onChange={e => onReviewFilterChange(e, \"max\")}\n                    />\n                    <a\n                        onClick={() =>\n                            props.changeSearchOptions(\"reviewFilter\", [1, 5])\n                        }\n                        className=\"reset-filter\"\n                    >\n                        Reset\n                    </a>\n                    <br />\n                    <br />\n                    <div\n                        className=\"col checkbox-wrapper\"\n                        onClick={() =>\n                            props.changeSearchOptions(\n                                \"includeUnreviewed\",\n                                !props.searchOptions.includeUnreviewed\n                            )\n                        }\n                    >\n                        <input\n                            type=\"checkbox\"\n                            checked={\n                                props.searchOptions.includeUnreviewed\n                                    ? true\n                                    : false\n                            }\n                            onChange={() =>\n                                props.changeSearchOptions(\n                                    \"includeUnreviewed\",\n                                    !props.searchOptions.includeUnreviewed\n                                )\n                            }\n                        />\n                        <span>Include unreviewed movies</span>\n                    </div>\n                </div>\n                <div className=\"col l4 s12\">\n                    <h3>filter by year</h3>\n                    Min:{\" \"}\n                    <input\n                        type=\"number\"\n                        className=\"review-search-input\"\n                        value={yearFilter[0]}\n                        min={props.getYearRange().min}\n                        max={props.getYearRange().max - 1}\n                        onChange={e => onYearFilterChange(e, \"min\")}\n                    />\n                    Max:{\" \"}\n                    <input\n                        type=\"number\"\n                        className=\"review-search-input\"\n                        value={yearFilter[1]}\n                        min={props.getYearRange().min + 1}\n                        max={props.getYearRange().max}\n                        onChange={e => onYearFilterChange(e, \"max\")}\n                    />\n                    <a\n                        onClick={() =>\n                            props.changeSearchOptions(\"yearFilter\", [\n                                props.getYearRange().min,\n                                props.getYearRange().max\n                            ])\n                        }\n                        className=\"reset-filter\"\n                    >\n                        Reset\n                    </a>\n                    <br />\n                    <br />\n                    <div\n                        className=\"col checkbox-wrapper\"\n                        onClick={() =>\n                            props.changeSearchOptions(\n                                \"includeNoYear\",\n                                !props.searchOptions.includeNoYear\n                            )\n                        }\n                    >\n                        <input\n                            type=\"checkbox\"\n                            checked={\n                                props.searchOptions.includeNoYear ? true : false\n                            }\n                            onChange={() =>\n                                props.changeSearchOptions(\n                                    \"includeNoYear\",\n                                    !props.searchOptions.includeNoYear\n                                )\n                            }\n                        />\n                        <span>Include movies with no year entered</span>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col s12\">\n                    <br />\n                    <button\n                        className=\"btn blue lighten-2\"\n                        onClick={() => submitSearch()}\n                    >\n                        Search\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(Search);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nimport TagSelect from \"./TagSelect\";\n\nclass MovieForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            info: {\n                title: \"\",\n                year: \"\",\n                watched: \"\",\n                added: \"\",\n                series: \"\",\n                releaseDate: \"\"\n            },\n            err: {\n                title: \"\",\n                year: \"\",\n                watched: \"\",\n                added: \"\",\n                series: \"\",\n                releaseDate: \"\"\n            }\n        };\n\n        this.getTagsFromSelect = this.getTagsFromSelect.bind(this);\n    }\n\n    onInputChange(e, label) {\n        let { info, err } = this.state;\n        info[label] = e.target.value;\n        err[label] = \"\";\n        this.setState({ info, err });\n    }\n\n    onWatchedChange() {\n        let info = this.state.info;\n        info.watched = !info.watched;\n        this.setState({ info });\n    }\n\n    getStarClass(num) {\n        let starClass = \"material-icons small icon-link review-star\";\n        if (this.state.review && this.state.review >= num) {\n            starClass += \" review-star-active\";\n        }\n        return starClass;\n    }\n\n    onReviewChange(num) {\n        if (num === this.state.review) {\n            this.setState({ review: false });\n        } else {\n            this.setState({ review: num });\n        }\n    }\n\n    getTagsFromSelect(tags) {\n        let info = this.state.info;\n        info.tags = tags;\n        this.setState({ info });\n    }\n\n    submit(e) {\n        // TODO: check for more form errors (movie already exists, year, releaseDate)\n        // (copied old error checking from AddMovie)\n        e.preventDefault();\n\n        let formErrors = false;\n\n        if (!this.state.info.title) {\n            formErrors = true;\n            let err = { title: \"Please add a title\" };\n            this.setState({ err });\n        }\n\n        // let errors = false;\n        // if (!this.state.title) {\n        //     this.setState({ titleErr: \"Please enter a title.\" });\n        //     errors = true;\n        // }\n        // if (this.state.title.includes(\"#\")) {\n        //     this.setState({ titleErr: \"Title cannot inclue a '#'\" });\n        //     errors = true;\n        // }\n        // if (this.state.year && this.state.year.length !== 4) {\n        //     this.setState({ yearErr: \"Please enter a valid year.\" });\n        //     errors = true;\n        // }\n        // // Some rough error checking on the date.\n        // // Make sure it's 10 digits, has a slash,\n        // // month is < 12 and day is < 31.\n        // if (\n        //     this.state.added.length !== 10 ||\n        //     !this.state.added.includes(\"/\") ||\n        //     this.state.added.split(\"/\")[0] > 12 ||\n        //     this.state.added.split(\"/\")[1] > 31\n        // ) {\n        //     this.setState({\n        //         addedErr: \"Please enter a date in the format mm/dd/yyyy\"\n        //     });\n        //     errors = true;\n        // }\n\n        if (!formErrors) {\n            this.props.movieAction(this.state.info, this.props.type);\n        }\n\n        this.props.history.push(`/${this.props.type}`);\n    }\n\n    componentWillMount() {\n        // If we're editing an existing movie,\n        // fill form with info\n        const { movies, type, title } = this.props;\n        if (this.props.actionVar === \"edit\") {\n            const movieInfo = movies[type].filter(movie => {\n                return movie.title === title;\n            })[0];\n            this.setState({ info: movieInfo });\n        }\n    }\n\n    render() {\n        const { type } = this.props;\n        const { info, err } = this.state;\n        return (\n            <form onSubmit={e => this.submit(e)}>\n                <div className=\"input-field col s12\">\n                    <p className=\"form-label\">Title</p>\n                    <input\n                        id=\"input-title\"\n                        type=\"text\"\n                        value={info.title}\n                        onChange={e => this.onInputChange(e, \"title\")}\n                    />\n                    <div className=\"form-err\">{err.title}</div>\n                </div>\n                <div className=\"input-field col s8\">\n                    <p className=\"form-label\">Year</p>\n                    <input\n                        id=\"input-year\"\n                        type=\"number\"\n                        value={info.year}\n                        onChange={e => this.onInputChange(e, \"year\")}\n                    />\n                    <div className=\"form-err\">{this.state.yearErr}</div>\n                </div>\n                <div className=\"input-field col s4\">\n                    <div\n                        className=\"col checkbox-wrapper\"\n                        onClick={() => this.onWatchedChange()}\n                    >\n                        <input\n                            type=\"checkbox\"\n                            checked={this.state.info.watched}\n                            onChange={() => this.onWatchedChange()}\n                        />\n                        <span>Watched?</span>\n                    </div>\n                </div>\n                <div className=\"input-field col s12\">\n                    <p className=\"form-label\">Tags</p>\n                    <TagSelect\n                        getAllTags={this.props.getAllTags}\n                        getTagsFromSelect={this.getTagsFromSelect}\n                        creatable={true}\n                        tags={this.state.info.tags}\n                    />\n                </div>\n                <div className=\"input-field col s12\">\n                    <p className=\"form-label\">\n                        Added to {type} (defaults to today, format MM/DD/YYYY)\n                    </p>\n                    <input\n                        id=\"input-added\"\n                        type=\"text\"\n                        value={info.added}\n                        onChange={e => this.onInputChange(e, \"added\")}\n                    />\n                    <div className=\"form-err\">{this.state.addedErr}</div>\n                </div>\n                <div className=\"input-field col s12\">\n                    <p className=\"form-label\">\n                        Series if applicable (e.g. Harry Potter and the\n                        Half-Blood Prince is part of \"Harry Potter\")\n                    </p>\n                    <input\n                        id=\"input-series\"\n                        type=\"text\"\n                        value={info.series}\n                        onChange={e => this.onInputChange(e, \"series\")}\n                    />\n                </div>\n                {type === \"collection\" ? (\n                    <div className=\"input-field col s12\">\n                        <p className=\"form-label\">Your review</p>\n                        <i\n                            className={this.getStarClass(1)}\n                            onClick={() => this.onReviewChange(1)}\n                        >\n                            star\n                        </i>\n                        <i\n                            className={this.getStarClass(2)}\n                            onClick={() => this.onReviewChange(2)}\n                        >\n                            star\n                        </i>\n                        <i\n                            className={this.getStarClass(3)}\n                            onClick={() => this.onReviewChange(3)}\n                        >\n                            star\n                        </i>\n                        <i\n                            className={this.getStarClass(4)}\n                            onClick={() => this.onReviewChange(4)}\n                        >\n                            star\n                        </i>\n                        <i\n                            className={this.getStarClass(5)}\n                            onClick={() => this.onReviewChange(5)}\n                        >\n                            star\n                        </i>\n                    </div>\n                ) : null}\n                {type === \"wishlist\" ? (\n                    <div className=\"input-field col s12\">\n                        <p className=\"form-label\">\n                            Release date if known, or can put \"released\" if\n                            already released\n                        </p>\n                        <input\n                            id=\"input-release\"\n                            type=\"text\"\n                            value={info.release}\n                            onChange={e => this.onInputChange(e, \"releaseDate\")}\n                        />\n                    </div>\n                ) : null}\n                <div className=\"input-field col s12\">\n                    <p className=\"form-err\">{this.state.formErr}</p>{\" \"}\n                    <button\n                        className=\"btn waves-effect waves-light blue lighten-2\"\n                        onClick={e => this.submit(e)}\n                    >\n                        {this.props.actionVar === \"add\" ? \"Add\" : \"Update\"}\n                        <i className=\"material-icons right\" />\n                    </button>\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default withRouter(MovieForm);\n","export const OMDB_API = \"http://www.omdbapi.com/?apikey=b502230&\";\n\nexport function formatTodaysDate() {\n  const now = new Date();\n  let day = now.getDate();\n  if (day < 10) {\n    day = \"0\" + String(day);\n  }\n  let month = now.getMonth() + 1;\n  if (month < 10) {\n    month = \"0\" + String(month);\n  }\n  const year = now.getFullYear();\n\n  return `${month}/${day}/${year}`;\n}\n\nexport function titleFromTags(arr) {\n  let title = \"\";\n  let titleArr = arr.split(\"&\");\n  if (titleArr.length === 1) {\n    title = titleArr[0];\n  } else if (titleArr.length === 2) {\n    title = titleArr[0] + \" & \" + titleArr[1];\n  } else {\n    for (let i in titleArr) {\n      if (i < titleArr.length - 1) {\n        title += titleArr[i] + \", \";\n      } else {\n        title += \" & \" + titleArr[i];\n      }\n    }\n  }\n  return title;\n}\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nimport MovieForm from \"../components/MovieForm\";\nimport { formatTodaysDate } from \"../utils\";\n\nclass AddMovie extends Component {\n    constructor(props) {\n        super(props);\n\n        this.addMovie = this.addMovie.bind(this);\n    }\n\n    addMovie(info, type) {\n        if (!info.added) {\n            info.added = formatTodaysDate();\n        }\n        if (type === \"wishlist\" && !info.releaseDate) {\n            info.releaseDate = \"unknown\";\n        }\n        this.props.addMovie(info, type);\n        this.props.history.push(`/${type}`);\n    }\n\n    componentWillMount() {\n        const today = formatTodaysDate();\n        this.setState({ added: today });\n    }\n\n    render() {\n        const type = this.props.match.params.type;\n        return (\n            <div className=\"row\">\n                <div className=\"col s12\">\n                    <Link to={`/${type}`}>\n                        <i className=\"material-icons small icon-link\">\n                            arrow_back\n                        </i>\n                    </Link>\n                    <Link to={\"/imdb\"} className=\"right\">\n                        IMDB Search{\" \"}\n                        <i className=\"material-icons tiny icon-link\">search</i>\n                    </Link>\n                    <h5>\n                        Add to{\" \"}\n                        {type === \"collection\" ? \"Collection\" : \"Wishlist\"}\n                    </h5>\n                    <div className=\"row\">\n                        <MovieForm\n                            movieAction={this.addMovie}\n                            actionVar=\"add\"\n                            type={type}\n                            getAllTags={this.props.getAllTags}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(AddMovie);\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nimport MovieForm from \"../components/MovieForm\";\nimport { formatTodaysDate } from \"../utils\";\n\nclass EditMovie extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { type: \"\", addedErr: \"\" };\n\n        this.editMovie = this.editMovie.bind(this);\n    }\n\n    onTitleChange(e) {\n        this.setState({ title: e.target.value });\n    }\n\n    onYearChange(e) {\n        this.setState({ year: e.target.value });\n    }\n\n    onWatchedChange(e) {\n        this.setState({ watched: e.target.checked });\n    }\n\n    onTagsChange(e) {\n        // TODO: better way to input than separating by spaces\n        this.setState({ tags: e.target.value, tagsErr: \"\" });\n    }\n\n    onAddedChange(e) {\n        this.setState({ added: e.target.value, addedErr: \"\" });\n    }\n\n    onReleaseDateChange(e) {\n        this.setState({ releaseDate: e.target.value });\n    }\n\n    onSeriesChange(e) {\n        this.setState({ series: e.target.value });\n    }\n\n    onReviewChange(num) {\n        if (num === this.state.review) {\n            this.setState({ review: false });\n        } else {\n            this.setState({ review: num });\n        }\n    }\n\n    getStarClass(num) {\n        let starClass = \"material-icons small icon-link review-star\";\n        if (this.state.review && this.state.review >= num) {\n            starClass += \" review-star-active\";\n        }\n        return starClass;\n    }\n\n    updateMovie(e) {\n        e.preventDefault();\n        let errors = false;\n        if (!this.state.title) {\n            this.setState({ titleErr: \"Please enter a title.\" });\n            errors = true;\n        }\n        if (this.state.title.includes(\"#\")) {\n            this.setState({ titleErr: \"Title cannot inclue a '#'\" });\n            errors = true;\n        }\n\n        // Some rough error checking on the date.\n        // Make sure it's 10 digits, has a slash,\n        // month is < 12 and day is < 31.\n        if (\n            this.state.added.length !== 10 ||\n            !this.state.added.includes(\"/\") ||\n            this.state.added.split(\"/\")[0] > 12 ||\n            this.state.added.split(\"/\")[1] > 31\n        ) {\n            this.setState({\n                addedErr: \"Please enter a date in the format mm/dd/yyyy\"\n            });\n            errors = true;\n        }\n\n        if (!errors) {\n            let tags;\n\n            if (String(this.state.tags.length) > 0) {\n                tags = this.state.tags.split(\" \");\n                tags = tags.filter(val => val); // get rid of empty values\n                tags = tags.sort();\n            } else {\n                tags = [];\n            }\n\n            const info = {\n                title: this.state.title,\n                year: this.state.year,\n                tags,\n                watched: this.state.watched,\n                added: this.state.added,\n                series: this.state.series,\n                review: this.state.review\n            };\n\n            if (this.state.type === \"wishlist\") {\n                info.releaseDate = this.state.releaseDate || \"Unknown\";\n            }\n\n            this.props.editMovie(\n                info,\n                this.props.match.params.title,\n                this.state.type\n            );\n            this.props.history.push(`/${this.state.type}`);\n        }\n    }\n\n    editMovie(info, type) {\n        this.props.editMovie(info, this.props.match.params.title, type);\n    }\n\n    componentWillMount() {\n        const title = this.props.match.params.title;\n        let obj;\n        const findInCollection = this.props.movies.collection.filter(movie => {\n            return movie.title === title;\n        });\n        if (findInCollection.length > 0) {\n            this.setState({ type: \"collection\" });\n            obj = this.props.movies.collection;\n        } else {\n            this.setState({ type: \"wishlist\" });\n            obj = this.props.movies.wishlist;\n        }\n\n        const info = obj.filter(movie => {\n            return movie.title === title;\n        })[0];\n\n        // if (typeof info.tags !== \"string\") {\n        //     let tagStr = \"\";\n        //     for (let i in info.tags) {\n        //         tagStr += info.tags[i];\n        //         if (i < info.tags.length - 1) {\n        //             tagStr += \" \";\n        //         }\n        //     }\n        //     info.tags = tagStr;\n        // }\n\n        if (!info.added) {\n            info.added = formatTodaysDate();\n        }\n\n        this.setState(info);\n    }\n\n    moveToCollection() {\n        // add to collection\n        const wishlist = this.props.movies.wishlist;\n        let info;\n        for (let i in wishlist) {\n            if (wishlist[i].title === this.state.title) {\n                info = wishlist[i];\n            }\n        }\n        if (typeof info.tags === \"string\") {\n            let tags = info.tags.split(\" \");\n            info.tags = tags;\n        }\n        delete info[\"releaseDate\"];\n        info.added = formatTodaysDate();\n        this.props.addMovie(info, \"collection\");\n\n        // delete from wishlist\n        this.props.deleteMovie(this.state.title, \"wishlist\");\n    }\n\n    render() {\n        const { type, title } = this.props.match.params;\n        return (\n            <div>\n                <Link to={`/${this.state.type}`}>\n                    <i className=\"material-icons small icon-link\">arrow_back</i>\n                </Link>\n                <Link to={`/${this.state.type}`}>\n                    <i\n                        className=\"material-icons small icon-link float-right\"\n                        onClick={() =>\n                            this.props.deleteMovie(\n                                this.state.title,\n                                this.state.type\n                            )\n                        }\n                        title={`Remove from ${this.state.type}`}\n                    >\n                        delete\n                    </i>\n                </Link>\n                {this.state.type === \"wishlist\" ? (\n                    <Link to=\"/collection\">\n                        <i\n                            className=\"material-icons small icon-link float-right\"\n                            title=\"Move to collection\"\n                            style={{ marginRight: \"10px\" }}\n                            onClick={() => this.moveToCollection()}\n                        >\n                            move_to_inbox\n                        </i>\n                    </Link>\n                ) : null}\n                <h5>edit {this.state.title}</h5>\n                <div className=\"row\">\n                    <MovieForm\n                        movieAction={this.editMovie}\n                        actionVar=\"edit\"\n                        type={type}\n                        title={title}\n                        getAllTags={this.props.getAllTags}\n                        movies={this.props.movies}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(EditMovie);\n","import React from \"react\";\n\nconst SortOptions = props => {\n    return (\n        <div id=\"sort-options\">\n            Sort options:{\" \"}\n            <a\n                onClick={() => props.changeSortMethod(\"dateAdded\")}\n                className={\n                    props.sortBy === \"dateAdded\"\n                        ? \"sort-option sort-option-active\"\n                        : \"sort-option\"\n                }\n            >\n                date added\n            </a>\n            {props.getSortOption(\"dateAdded\")}\n            {\" | \"}\n            <a\n                onClick={() => props.changeSortMethod(\"title\")}\n                className={\n                    props.sortBy === \"title\"\n                        ? \"sort-option sort-option-active\"\n                        : \"sort-option\"\n                }\n            >\n                title\n                {props.getSortOption(\"title\")}\n            </a>\n            {\" | \"}\n            <a\n                onClick={() => props.changeSortMethod(\"year\")}\n                className={\n                    props.sortBy === \"year\"\n                        ? \"sort-option sort-option-active\"\n                        : \"sort-option\"\n                }\n            >\n                year\n            </a>\n            {props.getSortOption(\"year\")}\n            {props.type !== \"wishlist\" ? (\n                <span>\n                    {\" | \"}\n                    <a\n                        onClick={() => props.changeSortMethod(\"review\")}\n                        className={\n                            props.sortBy === \"review\"\n                                ? \"sort-option sort-option-active\"\n                                : \"sort-option\"\n                        }\n                    >\n                        review\n                    </a>\n                    {props.getSortOption(\"review\")}\n                </span>\n            ) : null}\n        </div>\n    );\n};\n\nexport default SortOptions;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport SortOptions from \"./SortOptions\";\n\n/**\n * @param {string} sortBy: 'dateAdded', 'year', 'title'\n * @param {boolean} ascending: true or false\n * e.g. sortBy: 'title', ascending: true = alphabetical order,\n *      sortBy: 'title', ascending: false = reverse alphabetical order\n */\nclass TableList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.getSortOption = this.getSortOption.bind(this);\n        this.changeSortMethod = this.changeSortMethod.bind(this);\n    }\n\n    removeFromList(title) {\n        const rows = document.querySelectorAll(\".table-list-row\");\n        let val;\n        for (let i in rows) {\n            if (rows[i].classList) {\n                val = rows[i].classList.value;\n                if (val.substr(val.indexOf(\" \") + 1) === title) {\n                    rows[i].classList.add(\"hidden\");\n                }\n            }\n        }\n    }\n\n    sortByMethod(method, movies) {\n        if (method === \"year\" || method === \"review\") {\n            return movies.sort(function(a, b) {\n                // If same year or review or no year or review, sort by title\n                if (a[method] === b[method]) {\n                    const titleA = a.title.toLowerCase();\n                    const titleB = b.title.toLowerCase();\n                    if (titleA < titleB) {\n                        return -1;\n                    }\n                    if (titleA > titleB) {\n                        return 1;\n                    }\n                }\n                // If no value, put at end\n                if (!a[method] || a[method] === \"?\") {\n                    return 1;\n                }\n                if (!b[method] || b[method] === \"?\") {\n                    return -1;\n                }\n                return b[method] - a[method];\n            });\n        } else if (method === \"title\") {\n            return movies.sort(function(a, b) {\n                const titleA = a.title.toLowerCase();\n                const titleB = b.title.toLowerCase();\n                if (titleA < titleB) {\n                    return -1;\n                }\n                if (titleA > titleB) {\n                    return 1;\n                }\n                // If same title, sort by year\n                if (titleA === titleB) {\n                    return a.year - b.year;\n                }\n                return 0;\n            });\n        } else if (method === \"dateAdded\") {\n            // Split mm/dd/yyyy string into parts and compare each,\n            // first compare year (2), then month (0), then day (1)\n            return movies.sort(function(a, b) {\n                if (!a.added) {\n                    return -1;\n                }\n                if (!b.added) {\n                    return 1;\n                }\n\n                let dateA = a.added.split(\"/\");\n                let dateB = b.added.split(\"/\");\n\n                // Temp fix for yy formatted string\n                // TODO: make sure movies have 4 digits for year\n                if (dateA[2].length === 2) {\n                    dateA[2] = \"20\" + dateA[2];\n                }\n                if (dateB[2].length === 2) {\n                    dateB[2] = \"20\" + dateB[2];\n                }\n\n                if (dateA[2] > dateB[2]) {\n                    return -1;\n                }\n                if (dateA[2] < dateB[2]) {\n                    return 1;\n                }\n                if (dateA[2] === dateB[2]) {\n                    if (dateA[0] > dateB[0]) {\n                        return -1;\n                    }\n                    if (dateA[0] < dateB[0]) {\n                        return 1;\n                    }\n                    if (dateA[0] === dateB[0]) {\n                        if (dateA[1] > dateB[1]) {\n                            return -1;\n                        }\n                        if (dateA[1] < dateB[1]) {\n                            return 1;\n                        }\n                        // If date is exactly the same, go by title\n                        if (dateA[1] === dateB[1]) {\n                            const titleA = a.title.toLowerCase();\n                            const titleB = b.title.toLowerCase();\n                            if (titleA < titleB) {\n                                return -1;\n                            }\n                            if (titleA > titleB) {\n                                return 1;\n                            }\n                            if (titleA === titleB) {\n                                // TODO: show most recent first\n                            }\n                            return 0;\n                        }\n                        return 0;\n                    }\n                    return 0;\n                }\n                return 0;\n            });\n        }\n    }\n\n    renderMovies(movies) {\n        let rows = [];\n        const { method, ascending } = this.props.sortOption;\n        let sortedMovies = this.sortByMethod(method, movies);\n        if (!ascending) {\n            sortedMovies.reverse();\n        }\n\n        for (let i in sortedMovies) {\n            const movie = sortedMovies[i];\n            rows.push(\n                <tr\n                    key={i}\n                    className={`table-list-row ${movie.title}`}\n                    title={movie.title}\n                >\n                    <td>\n                        {movie.title}\n                        {this.props.deletable ? (\n                            <i\n                                className=\"material-icons tiny icon-link icon-link-blue\"\n                                onClick={() => this.removeFromList(movie.title)}\n                            >\n                                delete\n                            </i>\n                        ) : null}\n                        {this.props.editable ? (\n                            <Link\n                                to={`/edit/${this.props.type}/${movie.title}`}\n                            >\n                                <i className=\"material-icons tiny icon-link icon-link-blue\">\n                                    edit\n                                </i>\n                            </Link>\n                        ) : null}\n                    </td>\n                    <td>\n                        <ul className=\"tags-ul\">\n                            {this.renderTags(movie.tags)}\n                        </ul>\n                    </td>\n                    <td className=\"hide-on-med-and-down\">{movie.year}</td>\n                    <td\n                        className=\"hide-on-small-only\"\n                        style={{ textAlign: \"center\" }}\n                    >\n                        {movie.watched ? \"Yes\" : \"No\"}\n                    </td>\n                    {this.props.type === \"wishlist\" ? (\n                        <td>{movie.releaseDate}</td>\n                    ) : null}\n                    {this.props.type !== \"wishlist\" ? (\n                        <td className=\"hide-on-small-only\">\n                            {this.getStars(movie.review)}\n                        </td>\n                    ) : null}\n                </tr>\n            );\n        }\n\n        return rows;\n    }\n\n    getStars(num) {\n        let starsArr = [];\n        for (let i = 0; i < num; i++) {\n            starsArr.push(\n                <i\n                    key={i}\n                    className=\"material-icons tiny icon-link icon-link-blue\"\n                >\n                    star\n                </i>\n            );\n        }\n        return starsArr;\n    }\n\n    renderTags(tags) {\n        let renderTagArr = [];\n\n        for (let i in tags) {\n            let tagClass = \"tag-result\";\n            if (\n                this.props.includeTags &&\n                this.props.includeTags.includes(tags[i])\n            ) {\n                tagClass += \" tag-match\";\n            }\n            renderTagArr.push(\n                <li className={tagClass} key={i}>\n                    {tags[i]}\n                </li>\n            );\n        }\n\n        return renderTagArr;\n    }\n\n    changeSortMethod(type) {\n        if (this.props.sortOption.method === type) {\n            if (this.props.sortOption.ascending) {\n                this.props.changeSortOption({ method: type, ascending: false });\n            } else {\n                this.props.changeSortOption({ method: type, ascending: true });\n            }\n        } else {\n            this.props.changeSortOption({ method: type, ascending: true });\n        }\n    }\n\n    getSortOption(type) {\n        let icon;\n        let iconClass = \"material-icons tiny icon-link\";\n        if (this.props.sortOption.method === type) {\n            iconClass += \" icon-link-blue\";\n            if (this.props.sortOption.ascending) {\n                icon = \"up\";\n            } else {\n                icon = \"down\";\n            }\n        } else {\n            icon = \"up\";\n        }\n\n        return <i className={iconClass}>{`arrow_drop_${icon}`}</i>;\n    }\n\n    componentWillMount() {\n        if (\n            this.props.type === \"wishlist\" &&\n            this.props.sortOption.method === \"review\"\n        ) {\n            this.changeSortMethod(\"dateAdded\");\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <SortOptions\n                    sortBy={this.props.sortOption.method}\n                    changeSortMethod={this.changeSortMethod}\n                    getSortOption={this.getSortOption}\n                    type={this.props.type}\n                />\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Title</th>\n                            <th>Tags</th>\n                            <th className=\"hide-on-med-and-down\">Year</th>\n                            <th className=\"hide-on-small-only\">Watched?</th>\n                            {this.props.type === \"wishlist\" ? (\n                                <th>Release Date</th>\n                            ) : null}\n                            {this.props.type !== \"wishlist\" ? (\n                                <th className=\"hide-on-small-only\">\n                                    Your Review\n                                </th>\n                            ) : null}\n                        </tr>\n                    </thead>\n                    <tbody>{this.renderMovies(this.props.movies)}</tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default TableList;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport TableList from \"../components/TableList\";\n\nconst Collection = props => {\n    // fix for tags becoming strings for no reason??? wtf\n    // let myProps = props.movies;\n    // for (let i in props.movies) {\n    //     if (typeof props.movies[i].tags === \"string\") {\n    //         let tags;\n    //         if (props.movies[i].tags.length > 0) {\n    //             tags = props.movies[i].tags.split(\" \");\n    //             tags = tags.filter(val => val); // get rid of empty values\n    //         } else {\n    //             tags = [];\n    //         }\n    //         myProps[i].tags = tags;\n    //     }\n    // }\n\n    return (\n        <div>\n            <div className=\"col s12\">\n                <h2>Collection</h2>\n            </div>\n            <Link to=\"/add/collection\">\n                <i className=\"material-icons small icon-link float-right\">\n                    add_circle\n                </i>\n            </Link>\n            <TableList\n                movies={props.movies}\n                type=\"collection\"\n                editable={true}\n                deletable={false}\n                sortOption={props.sortOption}\n                changeSortOption={props.changeSortOption}\n            />\n            <div className=\"dev-options\">\n                <a\n                    className=\"dev-option\"\n                    onClick={() => props.deleteAll(\"collection\")}\n                >\n                    Delete collection\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport default Collection;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport TableList from \"../components/TableList\";\n\nconst Wishlist = props => {\n    const wishlist = props.wishlist;\n    for (let i in wishlist) {\n        if (typeof wishlist[i].tags === \"string\") {\n            let tags;\n            if (wishlist[i].tags.length > 0) {\n                tags = wishlist[i].tags.split(\" \");\n                tags = tags.filter(val => val); // get rid of empty values\n            } else {\n                tags = [];\n            }\n            wishlist[i].tags = tags;\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"col s12\">\n                <h2>Wishlist</h2>\n            </div>\n            <Link to=\"/add/wishlist\">\n                <i className=\"material-icons small icon-link float-right\">\n                    add_circle\n                </i>\n            </Link>\n            <TableList\n                movies={wishlist}\n                type=\"wishlist\"\n                editable={true}\n                deletable={false}\n                sortOption={props.sortOption}\n                changeSortOption={props.changeSortOption}\n            />\n            <div className=\"dev-options\">\n                <a\n                    className=\"dev-option\"\n                    onClick={() => props.deleteAll(\"wishlist\")}\n                >\n                    Delete wishlist\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport default Wishlist;\n","const date = \"10/09/18\";\n\nexport function fillMyMovies() {\n    const collection = [\n        {\n            added: date,\n            tags: [\"crime\", \"drama\"],\n            title: \"American Hustle\",\n            watched: false,\n            year: \"2013\",\n            series: \"\"\n        },\n        {\n            added: date,\n            tags: [\"war\", \"action\"],\n            title: \"American Sniper\",\n            watched: false,\n            year: \"2014\",\n            series: \"\"\n        },\n        {\n            added: date,\n            tags: [\"musical\", \"animated\"],\n            title: \"Anastasia\",\n            watched: true,\n            year: \"?\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"action\", \"feminism\"],\n            title: \"Atomic Blonde\",\n            watched: false,\n            year: \"2017\",\n            series: \"\"\n        },\n        {\n            added: date,\n            tags: [\"action\", \"crime\", \"drama\"],\n            title: \"Baby Driver\",\n            watched: false,\n            year: \"2017\",\n            series: \"\"\n        },\n        {\n            added: date,\n            tags: [\"comedy\"],\n            title: \"Baywatch\",\n            watched: false,\n            year: \"?\",\n            series: \"\"\n        },\n        {\n            added: date,\n            tags: [\"disney\", \"musical\"],\n            title: \"Beauty and the Beast (2017)\",\n            watched: true,\n            year: \"2017\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"disney\", \"animated\", \"musical\"],\n            title: \"Beauty and the Beast\",\n            watched: true,\n            year: \"\",\n            series: \"\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"disney\", \"animated\", \"superhero\", \"cute\"],\n            title: \"Big Hero 6\",\n            watched: true,\n            year: \"2014\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Black Panther\",\n            watched: true,\n            year: \"2018\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"disney\", \"animated\", \"feminism\", \"adventure\", \"action\"],\n            title: \"Brave\",\n            watched: true,\n            year: \"2012\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Captain America\",\n            watched: true,\n            year: \"?\",\n            series: \"Captain America\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Captain America: Winter Soldier\",\n            watched: true,\n            year: \"2014\",\n            series: \"Captain America\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"disney\", \"animated\", \"musical\", \"family\", \"cute\"],\n            title: \"Coco\",\n            watched: true,\n            year: \"2017\",\n            series: \"\",\n            review: 5\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\", \"comedy\"],\n            title: \"Deadpool\",\n            watched: true,\n            year: \"2016\",\n            series: \"Deadpool\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\", \"comedy\"],\n            title: \"Deadpool 2\",\n            watched: true,\n            year: \"2018\",\n            series: \"Deadpool\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"animated\", \"comedy\", \"cute\"],\n            title: \"Despicable Me\",\n            watched: true,\n            year: \"?\",\n            series: \"Despicable Me\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"animated\", \"comedy\", \"cute\"],\n            title: \"Despicable Me 2\",\n            watched: true,\n            year: \"2013\",\n            series: \"Despicable Me\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"animated\", \"comedy\", \"cute\"],\n            title: \"Despicable Me 3\",\n            watched: true,\n            year: \"?\",\n            series: \"Despicable Me\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"dystopia\", \"angsty\"],\n            title: \"Divergent\",\n            watched: true,\n            year: \"?\",\n            series: \"Divergent\",\n            review: 2\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Doctor Strange\",\n            watched: true,\n            year: \"2016\",\n            series: \"\"\n        },\n        {\n            added: date,\n            tags: [\"comedy\", \"musical\"],\n            title: \"Dr. Horrible's Sing-Along Blog\",\n            watched: true,\n            year: \"?\",\n            series: \"\",\n            review: 5\n        },\n        {\n            added: date,\n            tags: [\"war\", \"action\"],\n            title: \"Dunkirk\",\n            watched: false,\n            year: \"2017\",\n            series: \"\"\n        },\n        {\n            added: date,\n            tags: [\"magic\", \"nerdy\"],\n            title: \"Fantastic Beasts\",\n            watched: true,\n            year: \"2016\",\n            series: \"Fantastic Beasts\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"animated\", \"animals\", \"cute\"],\n            title: \"Finding Dory\",\n            watched: true,\n            year: \"2016\",\n            series: \"Finding Nemo\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\n                \"disney\",\n                \"animated\",\n                \"musical\",\n                \"feminism\",\n                \"magic\",\n                \"family\"\n            ],\n            title: \"Frozen\",\n            watched: true,\n            year: \"2013\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Guardians of the Galaxy\",\n            watched: true,\n            year: \"2014\",\n            series: \"Guardians of the Galaxy\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Guardians of the Galaxy: Vol. 2\",\n            watched: true,\n            year: \"2017\",\n            series: \"Guardians of the Galaxy\",\n            review: 2\n        },\n        {\n            added: date,\n            tags: [\"feminism\", \"comedy\", \"spoopy\", \"action\"],\n            title: \"Ghostbusters (2016)\",\n            watched: true,\n            year: \"2016\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"comedy\", \"musical\"],\n            title: \"Hairspray\",\n            watched: true,\n            year: \"?\",\n            series: \"\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"nerdy\", \"nostalgia\", \"magic\"],\n            title: \"Harry Potter\",\n            watched: true,\n            year: \"?\",\n            series: \"Harry Potter\",\n            review: 5\n        },\n        {\n            added: date,\n            tags: [\"history\", \"feminism\", \"drama\"],\n            title: \"Hidden Figures\",\n            watched: true,\n            year: \"?\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"cute\", \"animated\", \"animals\"],\n            title: \"How to Train Your Dragon\",\n            watched: true,\n            year: \"?\",\n            series: \"How to Train Your Dragon\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"cute\", \"animated\", \"animals\"],\n            title: \"How to Train Your Dragon 2\",\n            watched: true,\n            year: \"2014\",\n            series: \"How to Train Your Dragon\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"comedy\", \"drama\"],\n            title: \"I, Tonya\",\n            watched: true,\n            year: \"2017\",\n            series: \"\",\n            review: 5\n        },\n        {\n            added: date,\n            tags: [\"animated\", \"animals\"],\n            title: \"Ice Age\",\n            watched: true,\n            year: \"?\",\n            series: \"Ice Age\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"disney\", \"animated\", \"cute\"],\n            title: \"Inside Out\",\n            watched: true,\n            year: \"2015\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"action\", \"dystopia\", \"angsty\"],\n            title: \"Insurgent\",\n            watched: true,\n            year: \"2014\",\n            series: \"Divergent\",\n            review: 2\n        },\n        {\n            added: date,\n            tags: [\"action\", \"adventure\", \"scifi\"],\n            title: \"Interstellar\",\n            watched: true,\n            year: \"2014\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"disney\", \"musical\"],\n            title: \"Into the Woods\",\n            watched: true,\n            year: \"2014\",\n            series: \"\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Iron Man\",\n            watched: true,\n            year: \"?\",\n            series: \"Iron Man\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Iron Man 2\",\n            watched: true,\n            year: \"?\",\n            series: \"Iron Man\",\n            review: 2\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Iron Man 3\",\n            watched: true,\n            year: \"2013\",\n            series: \"Iron Man\",\n            review: 2\n        },\n        {\n            added: date,\n            tags: [\"animals\", \"animated\", \"comedy\"],\n            title: \"Isle of Dogs\",\n            watched: true,\n            year: \"2018\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"action\"],\n            title: \"Jurassic World\",\n            watched: true,\n            year: \"2015\",\n            series: \"Jurassic World\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\"],\n            title: \"Jurassic World: #2\",\n            watched: true,\n            year: \"2018\",\n            series: \"Jurassic World\",\n            review: 2\n        },\n        {\n            added: date,\n            tags: [\"animated\"],\n            title: \"Kubo and the Two Strings\",\n            watched: false,\n            year: \"2016\",\n            series: \"\"\n        },\n        {\n            added: date,\n            tags: [\"musical\", \"romance\"],\n            title: \"La La Land\",\n            watched: false,\n            year: \"2017 or 2016?\",\n            series: \"\"\n        },\n        {\n            added: date,\n            tags: [\"musical\", \"history\", \"drama\"],\n            title: \"Les Miserables\",\n            watched: true,\n            year: \"2012\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"nerdy\", \"magic\", \"adventure\"],\n            title: \"Lord of the Rings: #1\",\n            watched: true,\n            year: \"?\",\n            series: \"Lord of the Rings\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"nerdy\", \"magic\", \"adventure\"],\n            title: \"Lord of the Rings: #2\",\n            watched: true,\n            year: \"?\",\n            series: \"Lord of the Rings\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"nerdy\", \"magic\", \"adventure\"],\n            title: \"Lord of the Rings: #3\",\n            watched: true,\n            year: \"?\",\n            series: \"Lord of the Rings\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"disney\", \"animated\", \"musical\"],\n            title: \"Moana\",\n            watched: true,\n            year: \"?\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"musical\", \"comedy\"],\n            title: \"Pitch Perfect\",\n            watched: true,\n            year: \"2012\",\n            series: \"Pitch Perfect\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"musical\", \"comedy\"],\n            title: \"Pitch Perfect 2\",\n            watched: true,\n            year: \"2015\",\n            series: \"Pitch Perfect\",\n            review: 2\n        },\n        {\n            added: date,\n            tags: [\"musical\", \"comedy\"],\n            title: \"Pitch Perfect 3\",\n            watched: true,\n            year: \"?\",\n            series: \"Pitch Perfect\",\n            review: 2\n        },\n        {\n            added: date,\n            tags: [\"nerdy\", \"action\", \"adventure\", \"scifi\"],\n            title: \"Rogue One: A Star Wars Story\",\n            watched: true,\n            year: \"2016\",\n            series: \"Star Wars\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"superhero\", \"action\"],\n            title: \"Suicide Squad\",\n            watched: true,\n            year: \"2016\",\n            series: \"\",\n            review: 1\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"The Avengers\",\n            watched: true,\n            year: \"2012\",\n            series: \"Avengers\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"The Avengers: Age of Ultron\",\n            watched: true,\n            year: \"2015\",\n            series: \"Avengers\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"musical\", \"animated\", \"animals\", \"cute\"],\n            title: \"Sing!\",\n            watched: true,\n            year: \"?\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"marvel\", \"superhero\", \"action\"],\n            title: \"Spiderman: Homecoming\",\n            watched: true,\n            year: \"2017\",\n            series: \"Spiderman\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"nerdy\", \"scifi\", \"action\", \"adventure\"],\n            title: \"Star Wars\",\n            watched: true,\n            year: \"?\",\n            series: \"Star Wars\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"The Avengers: Infinity War\",\n            watched: true,\n            year: \"?\",\n            series: \"Avengers\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"comedy\", \"romance\", \"drama\"],\n            title: \"The Big Sick\",\n            watched: false,\n            year: \"2017\",\n            series: \"\"\n        },\n        {\n            added: date,\n            tags: [\"comedy\"],\n            title: \"The Hangover\",\n            watched: true,\n            year: \"?\",\n            series: \"The Hangover\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"history\", \"drama\"],\n            title: \"The Help\",\n            watched: true,\n            year: \"?\",\n            series: \"\",\n            review: 2\n        },\n        {\n            added: date,\n            tags: [\"action\", \"adventure\", \"nerdy\"],\n            title: \"The Hobbit\",\n            watched: true,\n            year: \"?\",\n            series: \"The Hobbit\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"adventure\", \"nerdy\"],\n            title: \"The Hobbit: The Desolation of Smaug\",\n            watched: true,\n            year: \"2013\",\n            series: \"The Hobbit\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"adventure\", \"nerdy\"],\n            title: \"The Hobbit: The Battle of the Five Armies\",\n            watched: true,\n            year: \"2014\",\n            series: \"The Hobbit\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"angsty\", \"dystopia\"],\n            title: \"The Hunger Games\",\n            watched: true,\n            year: \"2012\",\n            series: \"Hunger Games\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"action\", \"angsty\", \"dystopia\"],\n            title: \"The Hunger Games: Catching Fire\",\n            watched: true,\n            year: \"2013\",\n            series: \"Hunger Games\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"angsty\", \"dystopia\"],\n            title: \"The Hunger Games: Mockingjay Part 1\",\n            watched: true,\n            year: \"2014\",\n            series: \"Hunger Games\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"angsty\", \"dystopia\"],\n            title: \"The Hunger Games: Mockingjay Part 2\",\n            watched: true,\n            year: \"2015\",\n            series: \"Hunger Games\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"drama\", \"history\"],\n            title: \"The Imitation Game\",\n            watched: true,\n            year: \"2014\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"animated\", \"comedy\"],\n            title: \"The Lego Movie\",\n            watched: true,\n            year: \"2014\",\n            series: \"Lego Movie\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"animated\", \"comedy\"],\n            title: \"The Lego Batman Movie\",\n            watched: true,\n            year: \"?\",\n            series: \"Lego Movie\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"animated\", \"comedy\"],\n            title: \"The Lego Ninjago Movie\",\n            watched: true,\n            year: \"?\",\n            series: \"Lego Movie\"\n        },\n        {\n            added: date,\n            tags: [\"action\", \"dystopia\"],\n            title: \"The Maze Runner\",\n            watched: true,\n            year: \"2014\",\n            series: \"The Maze Runner\",\n            review: 2\n        },\n        {\n            added: date,\n            tags: [\"history\", \"drama\"],\n            title: \"The Zookeeper's Wife\",\n            watched: true,\n            year: \"2017\",\n            series: \"\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Thor\",\n            watched: true,\n            year: \"?\",\n            series: \"Thor\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Thor: The Dark World\",\n            watched: true,\n            year: \"2013\",\n            series: \"Thor\",\n            review: 2\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Thor: Ragnarok\",\n            watched: true,\n            year: \"2017\",\n            series: \"Thor\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"action\", \"superhero\", \"feminism\"],\n            title: \"Wonder Woman\",\n            watched: true,\n            year: \"2017\",\n            series: \"\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"animated\", \"disney\", \"cute\"],\n            title: \"Wreck-It Ralph\",\n            watched: true,\n            year: \"2012\",\n            series: \"Wreck-It Ralph\",\n            review: 4\n        },\n        {\n            added: date,\n            tags: [\"disney\", \"animated\", \"animals\"],\n            title: \"Zootopia\",\n            watched: true,\n            year: \"2016\",\n            series: \"\",\n            review: 4\n        }\n    ];\n    const wishlist = [\n        {\n            added: \"10/08/18\",\n            tags: [\"spoopy\", \"disney\", \"animated\"],\n            title: \"The Nightmare Before Christmas\",\n            watched: false,\n            year: \"?\",\n            releaseDate: \"released\"\n        },\n        {\n            added: \"10/08/18\",\n            tags: [\"comedy\", \"#deep\"],\n            title: \"The Truman Show\",\n            watched: true,\n            year: \"?\",\n            releaseDate: \"released\"\n        },\n        {\n            added: \"10/01/18\",\n            tags: [\"romance\", \"comedy\"],\n            title: \"Crazy Rich Asians\",\n            watched: false,\n            year: \"2018\",\n            releaseDate: \"?\"\n        },\n        {\n            added: \"10/07/18\",\n            tags: [\"disney\", \"animated\", \"superhero\"],\n            title: \"Incredibles 2\",\n            watched: true,\n            year: \"2018\",\n            releaseDate: \"October 23\"\n        },\n        {\n            added: \"10/01/18\",\n            tags: [\"comedy\", \"history\"],\n            title: \"KKKlansman\",\n            watched: false,\n            year: \"2018\",\n            releaseDate: \"?\"\n        },\n        {\n            added: \"10/01/18\",\n            tags: [\"disney\", \"musical\", \"nostalgia\"],\n            title: \"Mary Poppins Returns\",\n            watched: false,\n            year: \"2018\",\n            releaseDate: \"theaters soon?\"\n        },\n        {\n            added: \"10/01/18\",\n            tags: [\"disney\", \"animated\"],\n            title: \"Wreck-It Ralph 2\",\n            watched: false,\n            year: \"2018\",\n            releaseDate: \"theaters soon?\"\n        },\n        {\n            added: \"10/01/18\",\n            tags: [\"nerdy\", \"magic\"],\n            title: \"Fantastic Beasts: The Crimes of Grindelwald\",\n            watched: false,\n            year: \"2018\",\n            releaseDate: \"theaters in Nov\"\n        },\n        {\n            added: \"10/09/18\",\n            tags: [\"action\", \"superhero\", \"marvel\"],\n            title: \"Ant-Man\",\n            watched: true,\n            year: \"2015\",\n            series: \"Ant-Man\",\n            releaseDate: \"released\"\n        },\n        {\n            added: \"10/09/18\",\n            tags: [\"superhero\", \"action\", \"marvel\"],\n            title: \"Ant-Man and the Wasp\",\n            watched: false,\n            year: \"2018\",\n            series: \"Ant-Man\",\n            releaseDate: \"?\"\n        },\n        {\n            added: date,\n            tags: [\"horror\", \"romance\"],\n            title: \"Warm Bodies\",\n            watched: true,\n            year: \"2013\",\n            series: \"\",\n            releaseDate: \"released\",\n            review: 3\n        },\n        {\n            added: date,\n            tags: [\"animated\", \"disney\", \"cute\"],\n            title: \"Wreck-It Ralph 2\",\n            watched: true,\n            year: \"2012\",\n            releaseDate: \"?\",\n            series: \"Wreck-It Ralph\"\n        }\n    ];\n\n    return { collection, wishlist };\n}\n\n// {\n//     added: date,\n//     tags: [],\n//     title: \"\",\n//     watched: true,\n//     year: \"?\",\n//     series: \"\"\n// }\n\n// {\n//     added: \"\",\n//     tags: [],\n//     title: \"\",\n//     watched: false,\n//     year: \"\",\n//     releaseDate: \"\",\n//     series: \"\"\n//   }\n","import React, { Component } from \"react\";\nimport { fillMyMovies } from \"../myMovies\";\n\nfunction copyExportData(e) {\n    var copyData = document.getElementById(\"account-export\");\n    copyData.select();\n    document.execCommand(\"copy\");\n    alert(\"Copy successful.\");\n}\n\nclass Account extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { exportData: \"\", importData: \"\" };\n    }\n\n    onExportDataChange(e) {\n        this.setState({ exportData: e.target.value });\n    }\n\n    onImportDataChange(e) {\n        this.setState({ importData: e.target.value });\n    }\n\n    importData(e) {\n        const movies = JSON.parse(this.state.importData);\n        this.props.updateLocalStorage(movies.collection, movies.wishlist);\n        alert(\"Import successful.\");\n    }\n\n    fillDevMovies(obj) {\n        this.props.updateLocalStorage(obj.collection, obj.wishlist);\n    }\n\n    componentWillMount() {\n        this.setState({ exportData: JSON.stringify(this.props.movies) });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col s12\">\n                        <h2>My Account</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"input-field col m6 s12\">\n                        <p className=\"form-label\">\n                            <b>EXPORT DATA</b>\n                            <br />\n                            Copy your data and save it in a JSON file\n                        </p>\n                        <button\n                            className=\"btn blue lighten-2\"\n                            style={{ margin: \"22px 0\" }}\n                            onClick={e => copyExportData(e)}\n                        >\n                            Copy to Clipboard\n                        </button>\n                        <textarea\n                            id=\"account-export\"\n                            className=\"materialize-textarea\"\n                            value={this.state.exportData}\n                            onChange={e => this.onExportDataChange(e)}\n                        />\n                    </div>\n                    <div className=\"input-field col m6 s12\">\n                        <p className=\"form-label\">\n                            <b>IMPORT DATA</b>\n                            <br />\n                            Paste your data here and click \"Import Data\"\n                        </p>\n                        <button\n                            className=\"btn blue lighten-2\"\n                            style={{ margin: \"22px 0\" }}\n                            onClick={e => this.importData(e)}\n                        >\n                            Import Data\n                        </button>\n                        <textarea\n                            id=\"account-import\"\n                            className=\"materialize-textarea\"\n                            value={this.state.importData}\n                            onChange={e => this.onImportDataChange(e)}\n                        />\n                    </div>\n                </div>\n                <div className=\"dev-options\">\n                    <a\n                        className=\"dev-option\"\n                        onClick={() => this.fillDevMovies(fillMyMovies())}\n                    >\n                        Fill dev movies\n                    </a>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Account;\n","import React from \"react\";\n\nconst IMDBOptions = props => {\n    function displayOptions() {\n        let i = -1;\n        return props.data.map(movie => {\n            i++;\n            return (\n                <div\n                    className=\"col l3 m4 s12 imdb-result flex\"\n                    key={i}\n                    onClick={() => props.chooseMovie(movie.Title)}\n                >\n                    {movie.Poster !== \"N/A\" ? (\n                        <div>\n                            <img\n                                src={movie.Poster}\n                                alt={movie.Title}\n                                title={movie.Title}\n                                className=\"movie-poster\"\n                            />\n                            <br />\n                            {movie.Title}{\" \"}\n                            {movie.Year ? `(${movie.Year})` : null}\n                        </div>\n                    ) : null}\n                </div>\n            );\n        });\n    }\n\n    return <div className=\"row flex\">{displayOptions()}</div>;\n};\n\nexport default IMDBOptions;\n","import React from \"react\";\nimport { withRouter } from \"react-router\";\n\nconst IMDBResult = props => {\n    function addMovie(data, type) {\n        props.addMovie({ title: data.Title, year: data.Year || \"\" }, type);\n        props.history.push(`/edit/${data.Title}`);\n    }\n\n    const data = props.chosenData[0];\n    return (\n        <div className=\"row\">\n            <div className=\"col s12 link\">\n                <a onClick={() => props.changeDisplay(\"options\")}>\n                    {\" \"}\n                    <i className=\"material-icons tiny icon-link\">\n                        arrow_back\n                    </i>{\" \"}\n                    Back to view all results\n                </a>\n            </div>\n            <div className=\"col m6 s12\">\n                <p className=\"imdb-title\">\n                    {data.Title} ({data.Year})\n                </p>\n                <img\n                    className=\"movie-poster-lg\"\n                    src={data.Poster}\n                    alt={data.Title}\n                />\n            </div>\n            <div className=\"col m6 s12\">\n                <br />\n                <p\n                    className=\"imdb-action\"\n                    onClick={() => addMovie(data, \"collection\")}\n                >\n                    Move to collection{\" \"}\n                    <i\n                        className=\"material-icons small icon-link\"\n                        title=\"Move to collection\"\n                        style={{ marginRight: \"10px\" }}\n                    >\n                        move_to_inbox\n                    </i>\n                </p>\n                <p\n                    className=\"imdb-action\"\n                    onClick={() => addMovie(data, \"wishlist\")}\n                >\n                    Move to wishlist{\" \"}\n                    <i\n                        className=\"material-icons small icon-link\"\n                        title=\"Move to wishlist\"\n                        style={{ marginRight: \"10px\" }}\n                    >\n                        filter_vintage\n                    </i>\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(IMDBResult);\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { OMDB_API } from \"../utils\";\n\n// options: displays all matching movies\nimport IMDBOptions from \"../components/IMDBOptions\";\n// results: shows only the movie the user selected\nimport IMDBResult from \"../components/IMDBResult\";\n\nclass IMDB extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            search: \"\",\n            data: [],\n            display: \"\",\n            chosenData: {}\n        };\n\n        this.getData = this.getData.bind(this);\n        this.chooseMovie = this.chooseMovie.bind(this);\n        this.changeDisplay = this.changeDisplay.bind(this);\n    }\n\n    onSearchChange(e) {\n        this.setState({ search: e.target.value, display: \"\" });\n    }\n\n    getData(e) {\n        e.preventDefault();\n        axios\n            .get(`${OMDB_API}type=\"movie\"&s=${this.state.search}`)\n            .then(res => {\n                this.setState({ data: res.data.Search, display: \"options\" });\n            })\n            .catch(function(err) {\n                console.log(err);\n            });\n    }\n\n    chooseMovie(title) {\n        const chosenData = this.state.data.filter(movie => {\n            return movie.Title === title;\n        });\n        this.setState({ chosenData, display: \"result\" });\n    }\n\n    changeDisplay(display) {\n        this.setState({ display });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"col s12\">\n                    <h2>IMDB Search</h2>\n                </div>\n                <br />\n                <form onSubmit={e => this.getData(e)}>\n                    <div className=\"input-field col s12\">\n                        <p className=\"form-label\">Title</p>\n                        <input\n                            type=\"text\"\n                            value={this.state.search}\n                            onChange={e => this.onSearchChange(e)}\n                        />\n                    </div>\n                </form>\n                {this.state.display === \"options\" ? (\n                    <IMDBOptions\n                        data={this.state.data}\n                        chooseMovie={this.chooseMovie}\n                    />\n                ) : null}\n                {this.state.display === \"result\" ? (\n                    <IMDBResult\n                        changeDisplay={this.changeDisplay}\n                        chosenData={this.state.chosenData}\n                        addMovie={this.props.addMovie}\n                    />\n                ) : null}\n            </div>\n        );\n    }\n}\n\nexport default IMDB;\n","import React from \"react\";\n\nimport TableList from \"../components/TableList\";\n\nconst SearchResult = props => {\n    const { collection, searchOptions } = props;\n    const {\n        includeTags,\n        excludeTags,\n        unwatchedOnly,\n        reviewFilter,\n        includeUnreviewed,\n        yearFilter,\n        includeNoYear\n    } = searchOptions;\n\n    function getMatches() {\n        let matches = [];\n\n        for (let movie in collection) {\n            const movieInfo = collection[movie];\n            const { tags } = movieInfo;\n\n            let matchesIncludeTags = false;\n            let matchesExcludeTags = false;\n            let matchesUnwatchedOnly = false;\n            let matchesReviewFilter = false;\n            let matchesYearFilter = false;\n\n            // If there's no includeTags option, it matches.\n            // If there is, and it has matching tag(s), it matches.\n            if (includeTags.length > 0) {\n                let hasIncludeTags = includeTags.some(\n                    tag => tags.indexOf(tag) >= 0\n                );\n                matchesIncludeTags = hasIncludeTags;\n            } else {\n                matchesIncludeTags = true;\n            }\n\n            // If there's no excludeTags option, it matches.\n            // If there is, and it does not have matching tag(s), it matches.\n            if (excludeTags.length > 0) {\n                let hasExcludeTags = excludeTags.some(\n                    tag => tags.indexOf(tag) >= 0\n                );\n                matchesExcludeTags = !hasExcludeTags;\n            } else {\n                matchesExcludeTags = true;\n            }\n\n            // If there's no unwatchedOnly option, it matches.\n            // If there is, and it is unwatched, it matches.\n            if (!unwatchedOnly) {\n                matchesUnwatchedOnly = true;\n            } else {\n                if (!movieInfo.watched) {\n                    matchesUnwatchedOnly = true;\n                } else {\n                    matchesUnwatchedOnly = false;\n                }\n            }\n\n            // Check if movie review is within the specified range.\n            // If there's no review, check if user wants non-reviewed\n            // movies to come up.\n            const { review } = movieInfo;\n            if (!review) {\n                if (includeUnreviewed) {\n                    matchesReviewFilter = true;\n                } else {\n                    matchesReviewFilter = false;\n                }\n            } else {\n                if (review >= reviewFilter[0] && review <= reviewFilter[1]) {\n                    matchesReviewFilter = true;\n                } else {\n                    matchesReviewFilter = false;\n                }\n            }\n\n            // Check if movie year is within the specified range.\n            // If there's no year entered, check if user\n            // wants it to come up.\n            const { year } = movieInfo;\n            if (!year || year === \"?\") {\n                if (includeNoYear) {\n                    matchesYearFilter = true;\n                } else {\n                    matchesYearFilter = false;\n                }\n            } else {\n                if (year >= yearFilter[0] && year <= yearFilter[1]) {\n                    matchesYearFilter = true;\n                } else {\n                    matchesYearFilter = false;\n                }\n            }\n\n            // Make sure this movie entirely matches the user's search\n            // and add it to the matches if so.\n            if (\n                matchesIncludeTags &&\n                matchesExcludeTags &&\n                matchesUnwatchedOnly &&\n                matchesReviewFilter &&\n                matchesYearFilter\n            ) {\n                matches.push(movieInfo);\n            }\n        }\n\n        return matches;\n    }\n\n    return (\n        <div>\n            <h2>Search Result</h2>\n            <TableList\n                movies={getMatches()}\n                editable={false}\n                deletable={false}\n                sortOption={props.sortOption}\n                changeSortOption={props.changeSortOption}\n                includeTags={searchOptions.includeTags}\n            />\n        </div>\n    );\n};\n\nexport default SearchResult;\n","import _ from \"lodash\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Search from \"./pages/Search\";\nimport AddMovie from \"./pages/AddMovie\";\nimport EditMovie from \"./pages/EditMovie\";\nimport Collection from \"./pages/Collection\";\nimport Wishlist from \"./pages/Wishlist\";\nimport Account from \"./pages/Account\";\nimport IMDB from \"./pages/IMDB\";\nimport SearchResult from \"./pages/SearchResult\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            collection: [],\n            wishlist: [],\n            searchOptions: {\n                includeTags: [],\n                excludeTags: [],\n                unwatchedOnly: false,\n                watchedOnly: false,\n                reviewFilter: [1, 5],\n                includeUnreviewed: true,\n                yearFilter: [null, null],\n                includeNoYear: true\n            },\n            sortOption: { method: \"dateAdded\", ascending: true }\n        };\n\n        this.updateLocalStorage = this.updateLocalStorage.bind(this);\n        this.updateState = this.updateState.bind(this);\n        this.addMovie = this.addMovie.bind(this);\n        this.editMovie = this.editMovie.bind(this);\n        this.deleteMovie = this.deleteMovie.bind(this);\n        this.deleteAll = this.deleteAll.bind(this);\n        this.getAllTags = this.getAllTags.bind(this);\n        this.changeSearchOptions = this.changeSearchOptions.bind(this);\n        this.getYearRange = this.getYearRange.bind(this);\n        this.changeSortOption = this.changeSortOption.bind(this);\n    }\n\n    updateLocalStorage(collection, wishlist) {\n        // Divide into 4 to prevent maxing out localStorage\n        let coll_1 = [];\n        let coll_2 = [];\n        let coll_3 = [];\n        let coll_4 = [];\n        const coll = collection;\n\n        for (let i in coll) {\n            switch (i % 4) {\n                case 0:\n                    coll_1.push(coll[i]);\n                    break;\n                case 1:\n                    coll_2.push(coll[i]);\n                    break;\n                case 2:\n                    coll_3.push(coll[i]);\n                    break;\n                case 3:\n                    coll_4.push(coll[i]);\n                    break;\n                default:\n                    coll_1.push(coll[i]);\n                    break;\n            }\n        }\n\n        localStorage.setItem(\"movieState_collection_1\", JSON.stringify(coll_1));\n        localStorage.setItem(\"movieState_collection_2\", JSON.stringify(coll_2));\n        localStorage.setItem(\"movieState_collection_3\", JSON.stringify(coll_3));\n        localStorage.setItem(\"movieState_collection_4\", JSON.stringify(coll_4));\n        localStorage.setItem(\"movieState_wishlist\", JSON.stringify(wishlist));\n    }\n\n    updateState(coll_1, coll_2, coll_3, coll_4) {\n        const coll = _.union(coll_1, coll_2, coll_3, coll_4);\n\n        this.setState({\n            collection: coll || [],\n            wishlist:\n                JSON.parse(localStorage.getItem(\"movieState_wishlist\")) || []\n        });\n\n        this.updateYearRange(coll);\n    }\n\n    addMovie(movie, type) {\n        let current = this.state[type];\n        current.push(movie);\n\n        this.setState({ [type]: current });\n\n        this.updateYearRange(current);\n    }\n\n    editMovie(info, oldTitle, type) {\n        let newMovies = this.state[type];\n\n        for (let i in newMovies) {\n            if (newMovies[i].title === oldTitle) {\n                newMovies[i] = info;\n            }\n        }\n        if (info.title !== oldTitle) {\n            delete newMovies[oldTitle];\n        }\n\n        this.setState({ [type]: newMovies });\n\n        this.updateYearRange(newMovies);\n    }\n\n    deleteMovie(title, type) {\n        let newMovies = [];\n\n        this.setState({ [type]: newMovies });\n\n        this.updateYearRange(newMovies);\n    }\n\n    updateYearRange(coll) {\n        let { searchOptions } = this.state;\n        searchOptions.yearFilter = [\n            this.getYearRange(coll).min,\n            this.getYearRange(coll).max\n        ];\n        this.setState({ searchOptions });\n    }\n\n    deleteAll(type) {\n        this.setState({ [type]: [] });\n    }\n\n    getAllTags() {\n        let tagList = [];\n\n        for (let i in this.state.collection) {\n            for (let j in this.state.collection[i].tags) {\n                if (!tagList.includes(this.state.collection[i].tags[j])) {\n                    tagList.push(this.state.collection[i].tags[j]);\n                }\n            }\n        }\n\n        tagList = tagList.sort();\n        return tagList;\n    }\n\n    changeSearchOptions(key, value) {\n        let searchOptions = this.state.searchOptions;\n        searchOptions[key] = value;\n        this.setState({ searchOptions });\n        localStorage.setItem(\n            \"movieState_searchOptions\",\n            JSON.stringify(searchOptions)\n        );\n    }\n\n    getYearRange(coll) {\n        if (!coll) {\n            coll = this.state.collection;\n        }\n        let minYear = null;\n        let maxYear = null;\n\n        for (let i in coll) {\n            const year = parseInt(coll[i].year, 10);\n            if (year !== \"?\") {\n                if (!minYear) {\n                    minYear = year;\n                }\n                if (!maxYear) {\n                    maxYear = year;\n                }\n\n                if (year < minYear) {\n                    minYear = year;\n                }\n\n                if (year > maxYear) {\n                    maxYear = year;\n                }\n            }\n        }\n\n        return { min: minYear, max: maxYear };\n    }\n\n    changeSortOption(sortOption) {\n        this.setState({ sortOption });\n    }\n\n    componentDidUpdate() {\n        this.updateLocalStorage(this.state.collection, this.state.wishlist);\n    }\n\n    componentWillMount() {\n        const coll_1 = JSON.parse(\n            localStorage.getItem(\"movieState_collection_1\")\n        );\n        const coll_2 = JSON.parse(\n            localStorage.getItem(\"movieState_collection_2\")\n        );\n        const coll_3 = JSON.parse(\n            localStorage.getItem(\"movieState_collection_3\")\n        );\n        const coll_4 = JSON.parse(\n            localStorage.getItem(\"movieState_collection_4\")\n        );\n        this.updateState(coll_1, coll_2, coll_3, coll_4);\n\n        const searchOptions = JSON.parse(\n            localStorage.getItem(\"movieState_searchOptions\")\n        );\n\n        if (searchOptions) {\n            this.setState({ searchOptions });\n        }\n    }\n\n    render() {\n        const { collection, wishlist, searchOptions, sortOption } = this.state;\n        return (\n            <div className=\"App\">\n                <BrowserRouter>\n                    <div>\n                        <Header props={this.context} />\n                        <div\n                            className=\"container\"\n                            style={{ marginTop: \"20px\" }}\n                        >\n                            <Switch>\n                                <Route\n                                    exact\n                                    path=\"/\"\n                                    render={() => (\n                                        <Search\n                                            movies={collection}\n                                            getAllTags={this.getAllTags}\n                                            searchOptions={searchOptions}\n                                            changeSearchOptions={\n                                                this.changeSearchOptions\n                                            }\n                                            getYearRange={this.getYearRange}\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    path=\"/search_result\"\n                                    render={() => (\n                                        <SearchResult\n                                            collection={collection}\n                                            searchOptions={searchOptions}\n                                            sortOption={sortOption}\n                                            changeSortOption={\n                                                this.changeSortOption\n                                            }\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    path=\"/add/:type\"\n                                    render={() => (\n                                        <AddMovie\n                                            addMovie={this.addMovie}\n                                            editMovie={this.editMovie}\n                                            getAllTags={this.getAllTags}\n                                            movies={this.state}\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    path=\"/edit/:type/:title\"\n                                    render={() => (\n                                        <EditMovie\n                                            movies={this.state}\n                                            addMovie={this.addMovie}\n                                            getAllTags={this.getAllTags}\n                                            editMovie={this.editMovie}\n                                            deleteMovie={this.deleteMovie}\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    path=\"/collection\"\n                                    render={() => (\n                                        <Collection\n                                            movies={collection}\n                                            deleteAll={this.deleteAll}\n                                            sortOption={sortOption}\n                                            changeSortOption={\n                                                this.changeSortOption\n                                            }\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    path=\"/wishlist\"\n                                    render={() => (\n                                        <Wishlist\n                                            wishlist={wishlist}\n                                            deleteAll={this.deleteAll}\n                                            sortOption={sortOption}\n                                            changeSortOption={\n                                                this.changeSortOption\n                                            }\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    path=\"/account\"\n                                    render={() => (\n                                        <Account\n                                            updateLocalStorage={\n                                                this.updateLocalStorage\n                                            }\n                                            updateState={this.updateState}\n                                            movies={this.state}\n                                        />\n                                    )}\n                                />\n                                <Route\n                                    path=\"/imdb\"\n                                    render={() => (\n                                        <IMDB addMovie={this.addMovie} />\n                                    )}\n                                />\n                            </Switch>\n                        </div>\n                    </div>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nconst render = Component => {\n    return ReactDOM.render(<Component />, document.getElementById(\"root\"));\n};\n\nrender(App);\n\nif (module.hot) {\n    module.hot.accept(\"./App\", () => {\n        const NextApp = require(\"./App\").default;\n        render(NextApp);\n    });\n}\n\nregisterServiceWorker();\n"],"sourceRoot":""}